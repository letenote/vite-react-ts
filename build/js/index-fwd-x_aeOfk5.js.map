{"version":3,"file":"index-fwd-x_aeOfk5.js","sources":["../../src/components/Forms/TextArea/index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { TextareaAutosize as BaseTextareaAutosize } from \"@mui/base/TextareaAutosize\";\nimport { styled } from \"@mui/system\";\nimport { FwdStyles } from \"../../../constant/FwdStyles\";\nimport { grey } from \"@mui/material/colors\";\nimport FormControl from \"@mui/material/FormControl\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport { Controller } from \"react-hook-form\";\nimport { SelectOptionsTypes } from \"../type/SelectOptionsTypes.type\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\n\ntype SelectFormType = {\n  id: string;\n  name: string;\n  label: string;\n  required: boolean;\n  value: string;\n  style: {\n    marginLeft: string | number;\n    width: string;\n  };\n  error: boolean;\n  helperText: string;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  control: any;\n  options: SelectOptionsTypes;\n  registerField: string;\n  disabled: boolean;\n};\n\nexport default function MaxHeightTextarea(props: SelectFormType) {\n  const Textarea = styled(BaseTextareaAutosize)(\n    ({ theme }) => `\n    width: 100%;\n    font-family: \"Roboto\",\"Helvetica\",\"Arial\",sans-serif;\n    font-size: 0.875rem;\n    font-weight: 400;\n    line-height: 1.5;\n    padding: 16.5px 14px;\n    border-radius: 4px;\n    color: ${theme.palette.mode === \"dark\" ? grey[300] : grey[900]};\n    background: ${theme.palette.mode === \"dark\" ? grey[900] : \"#fff\"};\n    border: 1px solid ${theme.palette.mode === \"dark\" ? \"#c4c4c4\" : \"#c4c4c4\"};\n    box-shadow: 0px 2px 2px ${\n      theme.palette.mode === \"dark\" ? grey[900] : grey[50]\n    };\n\n    &:hover {\n      border-color: black;\n    }\n\n    &:focus {\n      border-color: ${props.error ? \"red\" : FwdStyles.brandColor};\n      box-shadow: 0 0 0 1px ${\n        theme.palette.mode === \"dark\"\n          ? FwdStyles.brandColor\n          : FwdStyles.brandColor\n      };\n    }\n\n    // firefox\n    &:focus-visible {\n      outline: 0;\n    }\n  `\n  );\n\n  return (\n    <FormControl\n      error={props.error}\n      disabled={props.disabled}\n      sx={{\n        marginTop: 2,\n        marginBottom: 1,\n        ml: {\n          xs: 0,\n          md: props.style.marginLeft,\n        },\n        width: {\n          xs: \"100%\",\n          md: props.style.width,\n        },\n      }}\n    >\n      <InputLabel\n        sx={{\n          backgroundColor: \"white\",\n          pr: 1,\n          position: \"absolute\",\n          top: \"-23px\",\n          fontSize: \"12px\",\n        }}\n      >{`${props.label}${props.required ? \" *\" : \"\"}`}</InputLabel>\n      <Controller\n        control={props.control}\n        name={props.registerField}\n        defaultValue={props.value}\n        rules={{\n          required: { value: props.required, message: props.helperText },\n        }}\n        render={({ field }) => {\n          console.log(\"field\", { field, props });\n          return (\n            <React.Fragment>\n              <Textarea\n                {...field}\n                maxRows={4}\n                aria-label={props.label}\n                // placeholder={props.label}\n                style={{\n                  height: \"150px\",\n                  borderColor: props.error ? \"red\" : \"#c4c4c4\",\n                }}\n              />\n              {props.error && (\n                <FormHelperText>{props.helperText}</FormHelperText>\n              )}\n            </React.Fragment>\n          );\n        }}\n      />\n    </FormControl>\n  );\n}\n"],"names":["MaxHeightTextarea","props","Textarea","styled","BaseTextareaAutosize","theme","palette","mode","grey","error","FwdStyles","brandColor","jsxRuntimeExports","jsxs","FormControl","disabled","sx","marginTop","marginBottom","ml","xs","md","style","marginLeft","width","children","jsx","InputLabel","backgroundColor","pr","position","top","fontSize","label","required","Controller","control","name","registerField","defaultValue","value","rules","message","helperText","render","field","console","log","React.Fragment","maxRows","height","borderColor","FormHelperText"],"mappings":"8NA8BA,SAAwBA,EAAkBC,GAClC,MAAAC,EAAWC,EAAOC,EAAPD,EACf,EAAGE,WAAY,yNAQiB,SAAvBA,EAAMC,QAAQC,KAAkBC,EAAK,KAAOA,EAAK,0BACrB,SAAvBH,EAAMC,QAAQC,KAAkBC,EAAK,KAAO,kCACtCH,EAAMC,QAAQC,KAAkB,2CAE3B,SAAvBF,EAAMC,QAAQC,KAAkBC,EAAK,KAAOA,EAAK,kGAQjCP,EAAMQ,MAAQ,MAAQC,EAAUC,4CAE9CN,EAAMC,QAAQC,KACVG,EAAUC,8FAalB,OAAAC,EAAAC,KAACC,EAAA,CACCL,MAAOR,EAAMQ,MACbM,SAAUd,EAAMc,SAChBC,GAAI,CACFC,UAAW,EACXC,aAAc,EACdC,GAAI,CACFC,GAAI,EACJC,GAAIpB,EAAMqB,MAAMC,YAElBC,MAAO,CACLJ,GAAI,OACJC,GAAIpB,EAAMqB,MAAME,QAIpBC,SAAA,CAAAb,EAAAc,IAACC,EAAA,CACCX,GAAI,CACFY,gBAAiB,QACjBC,GAAI,EACJC,SAAU,WACVC,IAAK,QACLC,SAAU,QAEZP,YAAGxB,EAAMgC,QAAQhC,EAAMiC,SAAW,KAAO,OAC3CtB,EAAAc,IAACS,EAAA,CACCC,QAASnC,EAAMmC,QACfC,KAAMpC,EAAMqC,cACZC,aAActC,EAAMuC,MACpBC,MAAO,CACLP,SAAU,CAAEM,MAAOvC,EAAMiC,SAAUQ,QAASzC,EAAM0C,aAEpDC,OAAQ,EAAGC,YACTC,QAAQC,IAAI,QAAS,CAAEF,QAAO5C,UAE5BW,EAAAC,KAACmC,WAAA,CACCvB,SAAA,CAAAb,EAAAc,IAACxB,EAAA,IACK2C,EACJI,QAAS,EACT,aAAYhD,EAAMgC,MAElBX,MAAO,CACL4B,OAAQ,QACRC,YAAalD,EAAMQ,MAAQ,MAAQ,aAGtCR,EAAMQ,aACJ2C,EAAA,CAAgB3B,WAAMkB,qBAQvC"}
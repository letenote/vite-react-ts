{"version":3,"file":"index-fwd-3OJlwG0P.js","sources":["../../node_modules/@mui/base/ClickAwayListener/ClickAwayListener.js","../../node_modules/@mui/material/SnackbarContent/snackbarContentClasses.js","../../node_modules/@mui/material/SnackbarContent/SnackbarContent.js","../../node_modules/@mui/material/Snackbar/snackbarClasses.js","../../node_modules/@mui/material/Snackbar/Snackbar.js","../../node_modules/@mui/base/useSnackbar/useSnackbar.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { elementAcceptingRef, exactProp, unstable_ownerDocument as ownerDocument, unstable_useForkRef as useForkRef, unstable_useEventCallback as useEventCallback } from '@mui/utils';\n\n// TODO: return `EventHandlerName extends `on${infer EventName}` ? Lowercase<EventName> : never` once generatePropTypes runs with TS 4.1\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction mapEventPropToEvent(eventProp) {\n  return eventProp.substring(2).toLowerCase();\n}\nfunction clickedRootScrollbar(event, doc) {\n  return doc.documentElement.clientWidth < event.clientX || doc.documentElement.clientHeight < event.clientY;\n}\n/**\n * Listen for click events that occur somewhere in the document, outside of the element itself.\n * For instance, if you need to hide a menu when people click anywhere else on your page.\n *\n * Demos:\n *\n * - [Click-Away Listener](https://mui.com/base-ui/react-click-away-listener/)\n *\n * API:\n *\n * - [ClickAwayListener API](https://mui.com/base-ui/react-click-away-listener/components-api/#click-away-listener)\n */\nfunction ClickAwayListener(props) {\n  const {\n    children,\n    disableReactTree = false,\n    mouseEvent = 'onClick',\n    onClickAway,\n    touchEvent = 'onTouchEnd'\n  } = props;\n  const movedRef = React.useRef(false);\n  const nodeRef = React.useRef(null);\n  const activatedRef = React.useRef(false);\n  const syntheticEventRef = React.useRef(false);\n  React.useEffect(() => {\n    // Ensure that this component is not \"activated\" synchronously.\n    // https://github.com/facebook/react/issues/20074\n    setTimeout(() => {\n      activatedRef.current = true;\n    }, 0);\n    return () => {\n      activatedRef.current = false;\n    };\n  }, []);\n  const handleRef = useForkRef(\n  // @ts-expect-error TODO upstream fix\n  children.ref, nodeRef);\n\n  // The handler doesn't take event.defaultPrevented into account:\n  //\n  // event.preventDefault() is meant to stop default behaviors like\n  // clicking a checkbox to check it, hitting a button to submit a form,\n  // and hitting left arrow to move the cursor in a text input etc.\n  // Only special HTML elements have these default behaviors.\n  const handleClickAway = useEventCallback(event => {\n    // Given developers can stop the propagation of the synthetic event,\n    // we can only be confident with a positive value.\n    const insideReactTree = syntheticEventRef.current;\n    syntheticEventRef.current = false;\n    const doc = ownerDocument(nodeRef.current);\n\n    // 1. IE11 support, which trigger the handleClickAway even after the unbind\n    // 2. The child might render null.\n    // 3. Behave like a blur listener.\n    if (!activatedRef.current || !nodeRef.current || 'clientX' in event && clickedRootScrollbar(event, doc)) {\n      return;\n    }\n\n    // Do not act if user performed touchmove\n    if (movedRef.current) {\n      movedRef.current = false;\n      return;\n    }\n    let insideDOM;\n\n    // If not enough, can use https://github.com/DieterHolvoet/event-propagation-path/blob/master/propagationPath.js\n    if (event.composedPath) {\n      insideDOM = event.composedPath().indexOf(nodeRef.current) > -1;\n    } else {\n      insideDOM = !doc.documentElement.contains(\n      // @ts-expect-error returns `false` as intended when not dispatched from a Node\n      event.target) || nodeRef.current.contains(\n      // @ts-expect-error returns `false` as intended when not dispatched from a Node\n      event.target);\n    }\n    if (!insideDOM && (disableReactTree || !insideReactTree)) {\n      onClickAway(event);\n    }\n  });\n\n  // Keep track of mouse/touch events that bubbled up through the portal.\n  const createHandleSynthetic = handlerName => event => {\n    syntheticEventRef.current = true;\n    const childrenPropsHandler = children.props[handlerName];\n    if (childrenPropsHandler) {\n      childrenPropsHandler(event);\n    }\n  };\n  const childrenProps = {\n    ref: handleRef\n  };\n  if (touchEvent !== false) {\n    childrenProps[touchEvent] = createHandleSynthetic(touchEvent);\n  }\n  React.useEffect(() => {\n    if (touchEvent !== false) {\n      const mappedTouchEvent = mapEventPropToEvent(touchEvent);\n      const doc = ownerDocument(nodeRef.current);\n      const handleTouchMove = () => {\n        movedRef.current = true;\n      };\n      doc.addEventListener(mappedTouchEvent, handleClickAway);\n      doc.addEventListener('touchmove', handleTouchMove);\n      return () => {\n        doc.removeEventListener(mappedTouchEvent, handleClickAway);\n        doc.removeEventListener('touchmove', handleTouchMove);\n      };\n    }\n    return undefined;\n  }, [handleClickAway, touchEvent]);\n  if (mouseEvent !== false) {\n    childrenProps[mouseEvent] = createHandleSynthetic(mouseEvent);\n  }\n  React.useEffect(() => {\n    if (mouseEvent !== false) {\n      const mappedMouseEvent = mapEventPropToEvent(mouseEvent);\n      const doc = ownerDocument(nodeRef.current);\n      doc.addEventListener(mappedMouseEvent, handleClickAway);\n      return () => {\n        doc.removeEventListener(mappedMouseEvent, handleClickAway);\n      };\n    }\n    return undefined;\n  }, [handleClickAway, mouseEvent]);\n  return /*#__PURE__*/_jsx(React.Fragment, {\n    children: /*#__PURE__*/React.cloneElement(children, childrenProps)\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ClickAwayListener.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The wrapped element.\n   */\n  children: elementAcceptingRef.isRequired,\n  /**\n   * If `true`, the React tree is ignored and only the DOM tree is considered.\n   * This prop changes how portaled elements are handled.\n   * @default false\n   */\n  disableReactTree: PropTypes.bool,\n  /**\n   * The mouse event to listen to. You can disable the listener by providing `false`.\n   * @default 'onClick'\n   */\n  mouseEvent: PropTypes.oneOf(['onClick', 'onMouseDown', 'onMouseUp', 'onPointerDown', 'onPointerUp', false]),\n  /**\n   * Callback fired when a \"click away\" event is detected.\n   */\n  onClickAway: PropTypes.func.isRequired,\n  /**\n   * The touch event to listen to. You can disable the listener by providing `false`.\n   * @default 'onTouchEnd'\n   */\n  touchEvent: PropTypes.oneOf(['onTouchEnd', 'onTouchStart', false])\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  ClickAwayListener['propTypes' + ''] = exactProp(ClickAwayListener.propTypes);\n}\nexport { ClickAwayListener };","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSnackbarContentUtilityClass(slot) {\n  return generateUtilityClass('MuiSnackbarContent', slot);\n}\nconst snackbarContentClasses = generateUtilityClasses('MuiSnackbarContent', ['root', 'message', 'action']);\nexport default snackbarContentClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"action\", \"className\", \"message\", \"role\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport { emphasize } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getSnackbarContentUtilityClass } from './snackbarContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    action: ['action'],\n    message: ['message']\n  };\n  return composeClasses(slots, getSnackbarContentUtilityClass, classes);\n};\nconst SnackbarContentRoot = styled(Paper, {\n  name: 'MuiSnackbarContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => {\n  const emphasis = theme.palette.mode === 'light' ? 0.8 : 0.98;\n  const backgroundColor = emphasize(theme.palette.background.default, emphasis);\n  return _extends({}, theme.typography.body2, {\n    color: theme.vars ? theme.vars.palette.SnackbarContent.color : theme.palette.getContrastText(backgroundColor),\n    backgroundColor: theme.vars ? theme.vars.palette.SnackbarContent.bg : backgroundColor,\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    padding: '6px 16px',\n    borderRadius: (theme.vars || theme).shape.borderRadius,\n    flexGrow: 1,\n    [theme.breakpoints.up('sm')]: {\n      flexGrow: 'initial',\n      minWidth: 288\n    }\n  });\n});\nconst SnackbarContentMessage = styled('div', {\n  name: 'MuiSnackbarContent',\n  slot: 'Message',\n  overridesResolver: (props, styles) => styles.message\n})({\n  padding: '8px 0'\n});\nconst SnackbarContentAction = styled('div', {\n  name: 'MuiSnackbarContent',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  display: 'flex',\n  alignItems: 'center',\n  marginLeft: 'auto',\n  paddingLeft: 16,\n  marginRight: -8\n});\nconst SnackbarContent = /*#__PURE__*/React.forwardRef(function SnackbarContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSnackbarContent'\n  });\n  const {\n      action,\n      className,\n      message,\n      role = 'alert'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SnackbarContentRoot, _extends({\n    role: role,\n    square: true,\n    elevation: 6,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SnackbarContentMessage, {\n      className: classes.message,\n      ownerState: ownerState,\n      children: message\n    }), action ? /*#__PURE__*/_jsx(SnackbarContentAction, {\n      className: classes.action,\n      ownerState: ownerState,\n      children: action\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? SnackbarContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n  /**\n   * The ARIA role attribute of the element.\n   * @default 'alert'\n   */\n  role: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default SnackbarContent;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSnackbarUtilityClass(slot) {\n  return generateUtilityClass('MuiSnackbar', slot);\n}\nconst snackbarClasses = generateUtilityClasses('MuiSnackbar', ['root', 'anchorOriginTopCenter', 'anchorOriginBottomCenter', 'anchorOriginTopRight', 'anchorOriginBottomRight', 'anchorOriginTopLeft', 'anchorOriginBottomLeft']);\nexport default snackbarClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"onEnter\", \"onExited\"],\n  _excluded2 = [\"action\", \"anchorOrigin\", \"autoHideDuration\", \"children\", \"className\", \"ClickAwayListenerProps\", \"ContentProps\", \"disableWindowBlurListener\", \"message\", \"onBlur\", \"onClose\", \"onFocus\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, useSlotProps } from '@mui/base';\nimport { ClickAwayListener } from '@mui/base/ClickAwayListener';\nimport { useSnackbar } from '@mui/base/useSnackbar';\nimport styled from '../styles/styled';\nimport useTheme from '../styles/useTheme';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport Grow from '../Grow';\nimport SnackbarContent from '../SnackbarContent';\nimport { getSnackbarUtilityClass } from './snackbarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    anchorOrigin\n  } = ownerState;\n  const slots = {\n    root: ['root', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`]\n  };\n  return composeClasses(slots, getSnackbarUtilityClass, classes);\n};\nconst SnackbarRoot = styled('div', {\n  name: 'MuiSnackbar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const center = {\n    left: '50%',\n    right: 'auto',\n    transform: 'translateX(-50%)'\n  };\n  return _extends({\n    zIndex: (theme.vars || theme).zIndex.snackbar,\n    position: 'fixed',\n    display: 'flex',\n    left: 8,\n    right: 8,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }, ownerState.anchorOrigin.vertical === 'top' ? {\n    top: 8\n  } : {\n    bottom: 8\n  }, ownerState.anchorOrigin.horizontal === 'left' && {\n    justifyContent: 'flex-start'\n  }, ownerState.anchorOrigin.horizontal === 'right' && {\n    justifyContent: 'flex-end'\n  }, {\n    [theme.breakpoints.up('sm')]: _extends({}, ownerState.anchorOrigin.vertical === 'top' ? {\n      top: 24\n    } : {\n      bottom: 24\n    }, ownerState.anchorOrigin.horizontal === 'center' && center, ownerState.anchorOrigin.horizontal === 'left' && {\n      left: 24,\n      right: 'auto'\n    }, ownerState.anchorOrigin.horizontal === 'right' && {\n      right: 24,\n      left: 'auto'\n    })\n  });\n});\nconst Snackbar = /*#__PURE__*/React.forwardRef(function Snackbar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSnackbar'\n  });\n  const theme = useTheme();\n  const defaultTransitionDuration = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n  const {\n      action,\n      anchorOrigin: {\n        vertical,\n        horizontal\n      } = {\n        vertical: 'bottom',\n        horizontal: 'left'\n      },\n      autoHideDuration = null,\n      children,\n      className,\n      ClickAwayListenerProps,\n      ContentProps,\n      disableWindowBlurListener = false,\n      message,\n      open,\n      TransitionComponent = Grow,\n      transitionDuration = defaultTransitionDuration,\n      TransitionProps: {\n        onEnter,\n        onExited\n      } = {}\n    } = props,\n    TransitionProps = _objectWithoutPropertiesLoose(props.TransitionProps, _excluded),\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  const ownerState = _extends({}, props, {\n    anchorOrigin: {\n      vertical,\n      horizontal\n    },\n    autoHideDuration,\n    disableWindowBlurListener,\n    TransitionComponent,\n    transitionDuration\n  });\n  const classes = useUtilityClasses(ownerState);\n  const {\n    getRootProps,\n    onClickAway\n  } = useSnackbar(_extends({}, ownerState));\n  const [exited, setExited] = React.useState(true);\n  const rootProps = useSlotProps({\n    elementType: SnackbarRoot,\n    getSlotProps: getRootProps,\n    externalForwardedProps: other,\n    ownerState,\n    additionalProps: {\n      ref\n    },\n    className: [classes.root, className]\n  });\n  const handleExited = node => {\n    setExited(true);\n    if (onExited) {\n      onExited(node);\n    }\n  };\n  const handleEnter = (node, isAppearing) => {\n    setExited(false);\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  };\n\n  // So we only render active snackbars.\n  if (!open && exited) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(ClickAwayListener, _extends({\n    onClickAway: onClickAway\n  }, ClickAwayListenerProps, {\n    children: /*#__PURE__*/_jsx(SnackbarRoot, _extends({}, rootProps, {\n      children: /*#__PURE__*/_jsx(TransitionComponent, _extends({\n        appear: true,\n        in: open,\n        timeout: transitionDuration,\n        direction: vertical === 'top' ? 'down' : 'up',\n        onEnter: handleEnter,\n        onExited: handleExited\n      }, TransitionProps, {\n        children: children || /*#__PURE__*/_jsx(SnackbarContent, _extends({\n          message: message,\n          action: action\n        }, ContentProps))\n      }))\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n  /**\n   * The anchor of the `Snackbar`.\n   * On smaller screens, the component grows to occupy all the available width,\n   * the horizontal alignment is ignored.\n   * @default { vertical: 'bottom', horizontal: 'left' }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n  /**\n   * The number of milliseconds to wait before automatically calling the\n   * `onClose` function. `onClose` should then set the state of the `open`\n   * prop to hide the Snackbar. This behavior is disabled by default with\n   * the `null` value.\n   * @default null\n   */\n  autoHideDuration: PropTypes.number,\n  /**\n   * Replace the `SnackbarContent` component.\n   */\n  children: PropTypes.element,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Props applied to the `ClickAwayListener` element.\n   */\n  ClickAwayListenerProps: PropTypes.object,\n  /**\n   * Props applied to the [`SnackbarContent`](/material-ui/api/snackbar-content/) element.\n   */\n  ContentProps: PropTypes.object,\n  /**\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\n   * @default false\n   */\n  disableWindowBlurListener: PropTypes.bool,\n  /**\n   * When displaying multiple consecutive snackbars using a single parent-rendered\n   * `<Snackbar/>`, add the `key` prop to ensure independent treatment of each message.\n   * For instance, use `<Snackbar key={message} />`. Otherwise, messages might update\n   * in place, and features like `autoHideDuration` could be affected.\n   */\n  key: () => null,\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the component requests to be closed.\n   * Typically `onClose` is used to set state in the parent component,\n   * which is used to control the `Snackbar` `open` prop.\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\n   * for example ignoring `clickaway`.\n   *\n   * @param {React.SyntheticEvent<any> | Event} event The event source of the callback.\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`, or `\"escapeKeyDown\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onMouseEnter: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n  /**\n   * The number of milliseconds to wait before dismissing after user interaction.\n   * If `autoHideDuration` prop isn't specified, it does nothing.\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\n   * we default to `autoHideDuration / 2` ms.\n   */\n  resumeHideDuration: PropTypes.number,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Grow\n   */\n  TransitionComponent: PropTypes.elementType,\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: theme.transitions.duration.enteringScreen,\n   *   exit: theme.transitions.duration.leavingScreen,\n   * }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.\n   * @default {}\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Snackbar;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { extractEventHandlers } from '../utils/extractEventHandlers';\n/**\n * The basic building block for creating custom snackbar.\n *\n * Demos:\n *\n * - [Snackbar](https://mui.com/base-ui/react-snackbar/#hook)\n *\n * API:\n *\n * - [useSnackbar API](https://mui.com/base-ui/react-snackbar/hooks-api/#use-snackbar)\n */\nexport function useSnackbar(parameters = {}) {\n  const {\n    autoHideDuration = null,\n    disableWindowBlurListener = false,\n    onClose,\n    open,\n    resumeHideDuration\n  } = parameters;\n  const timerAutoHide = React.useRef();\n  React.useEffect(() => {\n    if (!open) {\n      return undefined;\n    }\n\n    /**\n     * @param {KeyboardEvent} nativeEvent\n     */\n    function handleKeyDown(nativeEvent) {\n      if (!nativeEvent.defaultPrevented) {\n        // IE11, Edge (prior to using Blink?) use 'Esc'\n        if (nativeEvent.key === 'Escape' || nativeEvent.key === 'Esc') {\n          // not calling `preventDefault` since we don't know if people may ignore this event e.g. a permanently open snackbar\n          onClose == null || onClose(nativeEvent, 'escapeKeyDown');\n        }\n      }\n    }\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [open, onClose]);\n  const handleClose = useEventCallback((event, reason) => {\n    onClose == null || onClose(event, reason);\n  });\n  const setAutoHideTimer = useEventCallback(autoHideDurationParam => {\n    if (!onClose || autoHideDurationParam == null) {\n      return;\n    }\n    clearTimeout(timerAutoHide.current);\n    timerAutoHide.current = setTimeout(() => {\n      handleClose(null, 'timeout');\n    }, autoHideDurationParam);\n  });\n  React.useEffect(() => {\n    if (open) {\n      setAutoHideTimer(autoHideDuration);\n    }\n    return () => {\n      clearTimeout(timerAutoHide.current);\n    };\n  }, [open, autoHideDuration, setAutoHideTimer]);\n  const handleClickAway = event => {\n    onClose == null || onClose(event, 'clickaway');\n  };\n\n  // Pause the timer when the user is interacting with the Snackbar\n  // or when the user hide the window.\n  const handlePause = () => {\n    clearTimeout(timerAutoHide.current);\n  };\n\n  // Restart the timer when the user is no longer interacting with the Snackbar\n  // or when the window is shown back.\n  const handleResume = React.useCallback(() => {\n    if (autoHideDuration != null) {\n      setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);\n    }\n  }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);\n  const createHandleBlur = otherHandlers => event => {\n    const onBlurCallback = otherHandlers.onBlur;\n    onBlurCallback == null || onBlurCallback(event);\n    handleResume();\n  };\n  const createHandleFocus = otherHandlers => event => {\n    const onFocusCallback = otherHandlers.onFocus;\n    onFocusCallback == null || onFocusCallback(event);\n    handlePause();\n  };\n  const createMouseEnter = otherHandlers => event => {\n    const onMouseEnterCallback = otherHandlers.onMouseEnter;\n    onMouseEnterCallback == null || onMouseEnterCallback(event);\n    handlePause();\n  };\n  const createMouseLeave = otherHandlers => event => {\n    const onMouseLeaveCallback = otherHandlers.onMouseLeave;\n    onMouseLeaveCallback == null || onMouseLeaveCallback(event);\n    handleResume();\n  };\n  React.useEffect(() => {\n    // TODO: window global should be refactored here\n    if (!disableWindowBlurListener && open) {\n      window.addEventListener('focus', handleResume);\n      window.addEventListener('blur', handlePause);\n      return () => {\n        window.removeEventListener('focus', handleResume);\n        window.removeEventListener('blur', handlePause);\n      };\n    }\n    return undefined;\n  }, [disableWindowBlurListener, handleResume, open]);\n  const getRootProps = (externalProps = {}) => {\n    const externalEventHandlers = _extends({}, extractEventHandlers(parameters), extractEventHandlers(externalProps));\n    return _extends({\n      // ClickAwayListener adds an `onClick` prop which results in the alert not being announced.\n      // See https://github.com/mui/material-ui/issues/29080\n      role: 'presentation'\n    }, externalProps, externalEventHandlers, {\n      onBlur: createHandleBlur(externalEventHandlers),\n      onFocus: createHandleFocus(externalEventHandlers),\n      onMouseEnter: createMouseEnter(externalEventHandlers),\n      onMouseLeave: createMouseLeave(externalEventHandlers)\n    });\n  };\n  return {\n    getRootProps,\n    onClickAway: handleClickAway\n  };\n}"],"names":["mapEventPropToEvent","eventProp","substring","toLowerCase","ClickAwayListener","props","children","disableReactTree","mouseEvent","onClickAway","touchEvent","movedRef","React.useRef","nodeRef","activatedRef","syntheticEventRef","React.useEffect","setTimeout","current","handleRef","useForkRef","ref","handleClickAway","useEventCallback","event","insideReactTree","doc","ownerDocument","documentElement","clientWidth","clientX","clientHeight","clientY","clickedRootScrollbar","insideDOM","composedPath","indexOf","contains","target","createHandleSynthetic","childrenPropsHandler","handlerName","childrenProps","_jsx","mappedTouchEvent","handleTouchMove","addEventListener","removeEventListener","mappedMouseEvent","React.Fragment","React.cloneElement","getSnackbarContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","SnackbarContentRoot","styled","Paper","name","overridesResolver","styles","root","theme","emphasis","palette","mode","backgroundColor","emphasize","background","default","_extends","typography","body2","color","vars","SnackbarContent","getContrastText","bg","display","alignItems","flexWrap","padding","borderRadius","shape","flexGrow","breakpoints","up","minWidth","SnackbarContentMessage","message","SnackbarContentAction","action","marginLeft","paddingLeft","marginRight","SnackbarContent$1","React.forwardRef","inProps","useThemeProps","className","role","other","_objectWithoutPropertiesLoose","ownerState","classes","composeClasses","useUtilityClasses","_jsxs","jsxs","square","elevation","clsx","jsxRuntimeExports","jsx","getSnackbarUtilityClass","snackbarClasses$1","_excluded2","SnackbarRoot","capitalize","anchorOrigin","vertical","horizontal","zIndex","snackbar","position","left","right","justifyContent","top","bottom","transform","Snackbar$1","useTheme","defaultTransitionDuration","enter","transitions","duration","enteringScreen","exit","leavingScreen","autoHideDuration","ClickAwayListenerProps","ContentProps","disableWindowBlurListener","open","TransitionComponent","Grow","transitionDuration","TransitionProps","onEnter","onExited","slots","getRootProps","parameters","onClose","resumeHideDuration","timerAutoHide","document","handleKeyDown","nativeEvent","defaultPrevented","key","handleClose","reason","setAutoHideTimer","autoHideDurationParam","clearTimeout","handlePause","handleResume","React.useCallback","createHandleFocus","onFocusCallback","otherHandlers","onFocus","createMouseEnter","onMouseEnterCallback","onMouseEnter","createMouseLeave","onMouseLeaveCallback","onMouseLeave","window","externalProps","externalEventHandlers","extractEventHandlers","onBlur","onBlurCallback","useSnackbar","exited","setExited","React.useState","rootProps","useSlotProps","elementType","getSlotProps","externalForwardedProps","additionalProps","appear","in","timeout","direction","node","isAppearing"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5]}
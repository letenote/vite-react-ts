{"version":3,"file":"Avatar-fwd-DjoP233w.js","sources":["../../node_modules/@mui/material/internal/svg-icons/Person.js","../../node_modules/@mui/material/Avatar/avatarClasses.js","../../node_modules/@mui/material/Avatar/Avatar.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAvatarUtilityClass(slot) {\n  return generateUtilityClass('MuiAvatar', slot);\n}\nconst avatarClasses = generateUtilityClasses('MuiAvatar', ['root', 'colorDefault', 'circular', 'rounded', 'square', 'img', 'fallback']);\nexport default avatarClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"alt\", \"children\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Person from '../internal/svg-icons/Person';\nimport { getAvatarUtilityClass } from './avatarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    colorDefault\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, colorDefault && 'colorDefault'],\n    img: ['img'],\n    fallback: ['fallback']\n  };\n  return composeClasses(slots, getAvatarUtilityClass, classes);\n};\nconst AvatarRoot = styled('div', {\n  name: 'MuiAvatar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.colorDefault && styles.colorDefault];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexShrink: 0,\n  width: 40,\n  height: 40,\n  fontFamily: theme.typography.fontFamily,\n  fontSize: theme.typography.pxToRem(20),\n  lineHeight: 1,\n  borderRadius: '50%',\n  overflow: 'hidden',\n  userSelect: 'none'\n}, ownerState.variant === 'rounded' && {\n  borderRadius: (theme.vars || theme).shape.borderRadius\n}, ownerState.variant === 'square' && {\n  borderRadius: 0\n}, ownerState.colorDefault && _extends({\n  color: (theme.vars || theme).palette.background.default\n}, theme.vars ? {\n  backgroundColor: theme.vars.palette.Avatar.defaultBg\n} : {\n  backgroundColor: theme.palette.mode === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n})));\nconst AvatarImg = styled('img', {\n  name: 'MuiAvatar',\n  slot: 'Img',\n  overridesResolver: (props, styles) => styles.img\n})({\n  width: '100%',\n  height: '100%',\n  textAlign: 'center',\n  // Handle non-square image. The property isn't supported by IE11.\n  objectFit: 'cover',\n  // Hide alt text.\n  color: 'transparent',\n  // Hide the image broken icon, only works on Chrome.\n  textIndent: 10000\n});\nconst AvatarFallback = styled(Person, {\n  name: 'MuiAvatar',\n  slot: 'Fallback',\n  overridesResolver: (props, styles) => styles.fallback\n})({\n  width: '75%',\n  height: '75%'\n});\nfunction useLoaded({\n  crossOrigin,\n  referrerPolicy,\n  src,\n  srcSet\n}) {\n  const [loaded, setLoaded] = React.useState(false);\n  React.useEffect(() => {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n    setLoaded(false);\n    let active = true;\n    const image = new Image();\n    image.onload = () => {\n      if (!active) {\n        return;\n      }\n      setLoaded('loaded');\n    };\n    image.onerror = () => {\n      if (!active) {\n        return;\n      }\n      setLoaded('error');\n    };\n    image.crossOrigin = crossOrigin;\n    image.referrerPolicy = referrerPolicy;\n    image.src = src;\n    if (srcSet) {\n      image.srcset = srcSet;\n    }\n    return () => {\n      active = false;\n    };\n  }, [crossOrigin, referrerPolicy, src, srcSet]);\n  return loaded;\n}\nconst Avatar = /*#__PURE__*/React.forwardRef(function Avatar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAvatar'\n  });\n  const {\n      alt,\n      children: childrenProp,\n      className,\n      component = 'div',\n      imgProps,\n      sizes,\n      src,\n      srcSet,\n      variant = 'circular'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  let children = null;\n\n  // Use a hook instead of onError on the img element to support server-side rendering.\n  const loaded = useLoaded(_extends({}, imgProps, {\n    src,\n    srcSet\n  }));\n  const hasImg = src || srcSet;\n  const hasImgNotFailing = hasImg && loaded !== 'error';\n  const ownerState = _extends({}, props, {\n    colorDefault: !hasImgNotFailing,\n    component,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/_jsx(AvatarImg, _extends({\n      alt: alt,\n      srcSet: srcSet,\n      src: src,\n      sizes: sizes,\n      ownerState: ownerState,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/_jsx(AvatarFallback, {\n      ownerState: ownerState,\n      className: classes.fallback\n    });\n  }\n  return /*#__PURE__*/_jsx(AvatarRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attributes) applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The shape of the avatar.\n   * @default 'circular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default Avatar;"],"names":["Person","createSvgIcon","jsxRuntimeExports","jsx","d","getAvatarUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","AvatarRoot","styled","name","overridesResolver","props","styles","ownerState","root","variant","colorDefault","theme","_extends","position","display","alignItems","justifyContent","flexShrink","width","height","fontFamily","typography","fontSize","pxToRem","lineHeight","borderRadius","overflow","userSelect","vars","shape","color","palette","background","default","backgroundColor","Avatar","defaultBg","mode","grey","AvatarImg","img","textAlign","objectFit","textIndent","AvatarFallback","fallback","Avatar$1","React.forwardRef","inProps","ref","useThemeProps","alt","children","childrenProp","className","component","imgProps","sizes","src","srcSet","other","_objectWithoutPropertiesLoose","loaded","crossOrigin","referrerPolicy","setLoaded","React.useState","React.useEffect","active","image","Image","onload","onerror","srcset","useLoaded","hasImg","hasImgNotFailing","classes","composeClasses","useUtilityClasses","_jsx","as","clsx"],"mappings":"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","x_google_ignoreList":[0,1,2]}
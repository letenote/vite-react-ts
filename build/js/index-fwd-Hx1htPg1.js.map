{"version":3,"file":"index-fwd-Hx1htPg1.js","sources":["../../src/store/slice/settings/user/actions/checkAuth.ts","../../src/components/CheckAuth/index.tsx"],"sourcesContent":["import { Dispatch } from '@reduxjs/toolkit';\nimport API from '../../../../../helper/API';\nimport { jwtDecode } from 'jwt-decode';\nimport { loadUserData, loginResponseParamType } from './login';\nimport { autoLogout } from './logout';\n\nexport const checkAuth = () => async (dispatch: Dispatch) => {\n  try {\n    await new Promise((resolve) => setTimeout(resolve, 1000));\n    const response = await API({\n      method: 'post',\n      url: '/v1/users/checkAuth',\n      payload: { token: localStorage.getItem('_token') },\n    });\n\n    localStorage.setItem('_token', response.data.data.token);\n    const decoded: loginResponseParamType = jwtDecode(response.data.data.token);\n\n    return loadUserData(dispatch, decoded, response.data.message);\n  } catch (error) {\n    return autoLogout(dispatch, 'Session is expired');\n  }\n};\n","import React, { useEffect } from \"react\";\nimport { useAppDispatch } from \"../../store\";\nimport { checkAuth } from \"../../store/slice/settings/user/actions/checkAuth\";\nimport LoadingScreen from \"../LoadingScreen\";\n\nconst CheckAuth = () => {\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(checkAuth());\n  }, [dispatch]);\n\n  return (\n    <LoadingScreen\n      message={\"Please wait, we are checking your authorization ...\"}\n    />\n  );\n};\n\nconst MemoizedCheckAuth = React.memo(CheckAuth, (prevProps, nextProps) => {\n  return JSON.stringify(prevProps) === JSON.stringify(nextProps);\n});\n\nexport default MemoizedCheckAuth;\n"],"names":["MemoizedCheckAuth","React","memo","dispatch","useAppDispatch","useEffect","async","Promise","resolve","setTimeout","response","API","method","url","payload","token","localStorage","getItem","setItem","data","decoded","jwtDecode","loadUserData","message","error","autoLogout","jsxRuntimeExports","jsx","LoadingScreen","prevProps","nextProps","JSON","stringify"],"mappings":"gYAMa,MCYPA,EAAoBC,EAAMC,MAbd,KAChB,MAAMC,EAAWC,IAMf,OALFC,EAAAA,WAAU,KACRF,GDF2BG,MAAOH,IAChC,UACI,IAAII,SAASC,GAAYC,WAAWD,EAAS,OAC7C,MAAAE,QAAiBC,EAAI,CACzBC,OAAQ,OACRC,IAAK,sBACLC,QAAS,CAAEC,MAAOC,aAAaC,QAAQ,aAGzCD,aAAaE,QAAQ,SAAUR,EAASS,KAAKA,KAAKJ,OAClD,MAAMK,EAAkCC,EAAUX,EAASS,KAAKA,KAAKJ,OAErE,OAAOO,EAAanB,EAAUiB,EAASV,EAASS,KAAKI,eAC9CC,GACA,OAAAC,EAAWtB,EAAU,qBAC9B,ICbsB,GACnB,CAACA,IAGFuB,EAAAC,IAACC,EAAA,CACCL,QAAS,uDAAA,IAKiC,CAACM,EAAWC,IACnDC,KAAKC,UAAUH,KAAeE,KAAKC,UAAUF"}
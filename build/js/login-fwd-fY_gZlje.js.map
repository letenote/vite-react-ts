{"version":3,"file":"login-fwd-fY_gZlje.js","sources":["../../node_modules/jwt-decode/build/esm/index.js","../../src/store/slice/settings/user/actions/login.ts"],"sourcesContent":["export class InvalidTokenError extends Error {\n}\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\nfunction b64DecodeUnicode(str) {\n    return decodeURIComponent(atob(str).replace(/(.)/g, (m, p) => {\n        let code = p.charCodeAt(0).toString(16).toUpperCase();\n        if (code.length < 2) {\n            code = \"0\" + code;\n        }\n        return \"%\" + code;\n    }));\n}\nfunction base64UrlDecode(str) {\n    let output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n        case 0:\n            break;\n        case 2:\n            output += \"==\";\n            break;\n        case 3:\n            output += \"=\";\n            break;\n        default:\n            throw new Error(\"base64 string is not of the correct length\");\n    }\n    try {\n        return b64DecodeUnicode(output);\n    }\n    catch (err) {\n        return atob(output);\n    }\n}\nexport function jwtDecode(token, options) {\n    if (typeof token !== \"string\") {\n        throw new InvalidTokenError(\"Invalid token specified: must be a string\");\n    }\n    options || (options = {});\n    const pos = options.header === true ? 0 : 1;\n    const part = token.split(\".\")[pos];\n    if (typeof part !== \"string\") {\n        throw new InvalidTokenError(`Invalid token specified: missing part #${pos + 1}`);\n    }\n    let decoded;\n    try {\n        decoded = base64UrlDecode(part);\n    }\n    catch (e) {\n        throw new InvalidTokenError(`Invalid token specified: invalid base64 for part #${pos + 1} (${e.message})`);\n    }\n    try {\n        return JSON.parse(decoded);\n    }\n    catch (e) {\n        throw new InvalidTokenError(`Invalid token specified: invalid json for part #${pos + 1} (${e.message})`);\n    }\n}\n","import { Dispatch } from '@reduxjs/toolkit';\nimport { setAuthed, setConfig } from '../reducer/user';\nimport { jwtDecode } from 'jwt-decode';\nimport API from '../../../../../helper/API';\nimport { MenuType } from '../interface/userReducerInterface.interface';\nimport { capitalizeFirstLetter } from '../../../../../helper/populateString';\nimport { setSnackbar } from '../../../components/reducer/snackbar';\n\ntype loginActionParam = {\n  email: string;\n  password: string;\n};\n\nexport type loginResponseParamType = {\n  email: string;\n  name: string;\n  gender: string;\n  id: string;\n  nik: string;\n  role: string;\n  permissions: Array<string>;\n  departement: string;\n};\n\nexport const login =\n  (param: { data: loginActionParam; failCB: () => void }) =>\n  async (dispatch: Dispatch) => {\n    try {\n      const response = await API({\n        method: 'post',\n        url: '/v1/users/login',\n        payload: { password: param.data.password, email: param.data.email },\n      });\n\n      localStorage.setItem('_token', response.data.data.token);\n      const decoded: loginResponseParamType = jwtDecode(\n        response.data.data.token\n      );\n\n      return loadUserData(dispatch, decoded, response.data.message);\n    } catch (error) {\n      dispatch(\n        setSnackbar({\n          open: true,\n          autoHideDuration: 3000,\n          severity: 'warning',\n          message: 'Wrong email or password',\n        })\n      );\n      return param.failCB();\n    }\n  };\n\nexport const loadUserData = async (\n  dispatch: Dispatch,\n  decoded: loginResponseParamType,\n  message: string\n) => {\n  dispatch(\n    setAuthed({\n      authed: true,\n      name: decoded.name,\n      email: decoded.email,\n      gender: decoded.gender,\n      id: decoded.id,\n      nik: decoded.nik,\n      role: decoded.role,\n      permissions: decoded.permissions,\n      departement: decoded.departement,\n    })\n  );\n\n  const menus: Array<MenuType> = decoded.permissions.map((permission) => {\n    const getName = permission.split('/');\n    return {\n      isParent: getName.length === 1 ? true : false,\n      isChild: getName.length > 1 ? true : false,\n      name: capitalizeFirstLetter(getName[0]),\n      label: capitalizeFirstLetter(getName[0]),\n      href: `/${permission}`,\n    };\n  });\n\n  dispatch(\n    setSnackbar({\n      open: true,\n      autoHideDuration: 5000,\n      severity: 'success',\n      message: message,\n    })\n  );\n  await new Promise((resolve) => setTimeout(resolve, 500));\n  return dispatch(setConfig({ configLoaded: true, menus }));\n};\n"],"names":["InvalidTokenError","Error","base64UrlDecode","str","output","replace","length","decodeURIComponent","atob","m","p","code","charCodeAt","toString","toUpperCase","b64DecodeUnicode","err","jwtDecode","token","options","pos","header","part","split","decoded","e","message","JSON","parse","prototype","name","login","param","async","dispatch","response","API","method","url","payload","password","data","email","localStorage","setItem","loadUserData","error","setSnackbar","open","autoHideDuration","severity","failCB","setAuthed","authed","gender","id","nik","role","permissions","departement","menus","map","permission","getName","isParent","isChild","capitalizeFirstLetter","label","href","Promise","resolve","setTimeout","setConfig","configLoaded"],"mappings":"wJAAO,MAAMA,UAA0BC,OAYvC,SAASC,EAAgBC,GACjB,IAAAC,EAASD,EAAIE,QAAQ,KAAM,KAAKA,QAAQ,KAAM,KAC1C,OAAAD,EAAOE,OAAS,GACpB,KAAK,EACD,MACJ,KAAK,EACSF,GAAA,KACV,MACJ,KAAK,EACSA,GAAA,IACV,MACJ,QACU,MAAA,IAAIH,MAAM,8CAEpB,IACA,OAxBR,SAA0BE,GACf,OAAAI,mBAAmBC,KAAKL,GAAKE,QAAQ,QAAQ,CAACI,EAAGC,KAChD,IAAAC,EAAOD,EAAEE,WAAW,GAAGC,SAAS,IAAIC,cAIxC,OAHIH,EAAKL,OAAS,IACdK,EAAO,IAAMA,GAEV,IAAMA,CAAA,IAErB,CAgBeI,CAAiBX,EAC3B,OACMY,GACH,OAAOR,KAAKJ,EACf,CACL,CACO,SAASa,EAAUC,EAAOC,GACzB,GAAiB,iBAAVD,EACD,MAAA,IAAIlB,EAAkB,6CAEhCmB,IAAYA,EAAU,CAAA,GACtB,MAAMC,GAAyB,IAAnBD,EAAQE,OAAkB,EAAI,EACpCC,EAAOJ,EAAMK,MAAM,KAAKH,GAC1B,GAAgB,iBAATE,EACP,MAAM,IAAItB,EAAkB,0CAA0CoB,EAAM,KAE5E,IAAAI,EACA,IACAA,EAAUtB,EAAgBoB,EAC7B,OACMG,GACG,MAAA,IAAIzB,EAAkB,qDAAqDoB,EAAM,MAAMK,EAAEC,WAClG,CACG,IACO,OAAAC,KAAKC,MAAMJ,EACrB,OACMC,GACG,MAAA,IAAIzB,EAAkB,mDAAmDoB,EAAM,MAAMK,EAAEC,WAChG,CACL,CAtDA1B,EAAkB6B,UAAUC,KAAO,oBCsB5B,MAAMC,EACVC,GACDC,MAAOC,IACD,IACI,MAAAC,QAAiBC,EAAI,CACzBC,OAAQ,OACRC,IAAK,kBACLC,QAAS,CAAEC,SAAUR,EAAMS,KAAKD,SAAUE,MAAOV,EAAMS,KAAKC,SAG9DC,aAAaC,QAAQ,SAAUT,EAASM,KAAKA,KAAKvB,OAClD,MAAMM,EAAkCP,EACtCkB,EAASM,KAAKA,KAAKvB,OAGrB,OAAO2B,EAAaX,EAAUV,EAASW,EAASM,KAAKf,eAC9CoB,GASP,OARAZ,EACEa,EAAY,CACVC,MAAM,EACNC,iBAAkB,IAClBC,SAAU,UACVxB,QAAS,6BAGNM,EAAMmB,QACf,GAGSN,EAAeZ,MAC1BC,EACAV,EACAE,KAEAQ,EACEkB,EAAU,CACRC,QAAQ,EACRvB,KAAMN,EAAQM,KACdY,MAAOlB,EAAQkB,MACfY,OAAQ9B,EAAQ8B,OAChBC,GAAI/B,EAAQ+B,GACZC,IAAKhC,EAAQgC,IACbC,KAAMjC,EAAQiC,KACdC,YAAalC,EAAQkC,YACrBC,YAAanC,EAAQmC,eAIzB,MAAMC,EAAyBpC,EAAQkC,YAAYG,KAAKC,IAChD,MAAAC,EAAUD,EAAWvC,MAAM,KAC1B,MAAA,CACLyC,SAA6B,IAAnBD,EAAQzD,OAClB2D,QAASF,EAAQzD,OAAS,EAC1BwB,KAAMoC,EAAsBH,EAAQ,IACpCI,MAAOD,EAAsBH,EAAQ,IACrCK,KAAM,IAAIN,IAAU,IAaxB,OATA5B,EACEa,EAAY,CACVC,MAAM,EACNC,iBAAkB,IAClBC,SAAU,UACVxB,mBAGE,IAAI2C,SAASC,GAAYC,WAAWD,EAAS,OAC5CpC,EAASsC,EAAU,CAAEC,cAAc,EAAMb,UAAQ","x_google_ignoreList":[0]}
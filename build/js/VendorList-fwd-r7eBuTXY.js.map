{"version":3,"file":"VendorList-fwd-r7eBuTXY.js","sources":["../../src/store/slice/page/vendor/action/removeVendor.ts","../../src/containers/Vendor/child/VendorCard.tsx","../../src/containers/Vendor/child/VendorList.tsx"],"sourcesContent":["import { Dispatch } from '@reduxjs/toolkit';\nimport API from '../../../../../helper/API';\nimport request from 'axios';\nimport { setSnackbar } from '../../../components/reducer/snackbar';\nimport { ErrorResposeType } from '../../../../../helper/useHttp';\n\ntype RemoveVendorParamType = {\n  data: {\n    id: string;\n  };\n  successCB: () => void;\n  failedCB: () => void;\n};\n\nexport const removeVendorAction =\n  (param: RemoveVendorParamType) => async (dispatch: Dispatch) => {\n    try {\n      await new Promise((resolve) => setTimeout(resolve, 1000));\n      await API({\n        method: 'delete',\n        url: `/v1/vendors/remove`,\n        payload: param.data,\n      });\n      dispatch(\n        setSnackbar({\n          open: true,\n          autoHideDuration: 3000,\n          severity: 'success',\n          message: 'Vendor Inactive',\n        })\n      );\n      return param.successCB();\n    } catch (error) {\n      if (request.isAxiosError(error) && error.response) {\n        console.log('errr', (error.response?.data as ErrorResposeType).error);\n        dispatch(\n          setSnackbar({\n            open: true,\n            autoHideDuration: 3000,\n            severity: 'warning',\n            message: error.response?.data.message ?? error.message ?? '',\n          })\n        );\n      }\n\n      return param.failedCB();\n    }\n  };\n","import React, { useState } from 'react';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardHeader from '@mui/material/CardHeader';\nimport Chip from '@mui/material/Chip';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport EditIcon from '@mui/icons-material/Edit';\nimport styled from '@emotion/styled';\nimport Menu, { MenuProps } from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport { MethodType } from '../../../components/SelectInputDialog/enum/SelectInputDialogType.type';\nimport ConfirmationDialog from '../../../components/ConfirmationDialog';\nimport { useAppDispatch } from '../../../store';\nimport ToggleOffIcon from '@mui/icons-material/ToggleOff';\nimport { PageVendorListReducerInterface } from '../../../store/slice/page/vendor/interface/PageVendorReducerInterface.interface';\nimport moment from 'moment';\nimport { removeVendorAction } from '../../../store/slice/page/vendor/action/removeVendor';\nimport { getVendors } from '../../../store/slice/page/vendor/action/getVendors';\nimport VendorCreateAndUpdateDialog from './VendorCreateAndUpdateDialog';\n\nconst StyledMenu = styled((props: MenuProps) => (\n  <Menu\n    elevation={0}\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'right',\n    }}\n    transformOrigin={{\n      vertical: 'top',\n      horizontal: 'right',\n    }}\n    {...props}\n  />\n))(() => ({\n  '& .MuiPaper-root': {\n    borderRadius: 6,\n    marginTop: 1,\n    minWidth: 180,\n    color: 'rgb(55, 65, 81)',\n    boxShadow:\n      'rgb(255, 255, 255) 0px 0px 0px 0px, rgba(0, 0, 0, 0.05) 0px 0px 0px 1px, rgba(0, 0, 0, 0.1) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px',\n    '& .MuiMenu-list': {\n      padding: '4px 0',\n    },\n    '& .MuiMenuItem-root': {\n      '& .MuiSvgIcon-root': {\n        fontSize: 18,\n      },\n    },\n  },\n}));\n\ntype VendorCardPropsType = {\n  vendorData: PageVendorListReducerInterface;\n};\n\nconst VendorCard = (props: VendorCardPropsType) => {\n  const query = new URLSearchParams(location.search);\n  const page = parseInt(query.get('page') || '1', 10);\n  const dispatch = useAppDispatch();\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const [editVendor, setEditVendor] = useState<{ open: boolean }>({\n    open: false,\n  });\n  const handleEditVendorClose = () => {\n    setEditVendor({ open: false });\n  };\n  const handleEditVendorOpen = () => {\n    setEditVendor({ open: true });\n  };\n\n  const [removeVendor, setRemoveVendor] = useState<{\n    open: boolean;\n    loading: boolean;\n  }>({\n    open: false,\n    loading: false,\n  });\n  const handleRemoveVendorClose = () => {\n    setRemoveVendor({ open: false, loading: false });\n  };\n  const handleRemoveVendorOpen = () => {\n    setRemoveVendor({ open: true, loading: false });\n  };\n\n  const handleRemoveVendor = () => {\n    setRemoveVendor((prev) => ({\n      ...prev,\n      loading: true,\n    }));\n    dispatch(\n      removeVendorAction({\n        data: { id: props.vendorData.id },\n        successCB: () => {\n          handleRemoveVendorClose();\n          dispatch(getVendors({ page }));\n        },\n        failedCB: () => {\n          setRemoveVendor((prev) => ({\n            ...prev,\n            loading: false,\n          }));\n        },\n      })\n    );\n  };\n  return (\n    <Card>\n      <CardHeader\n        action={\n          <IconButton aria-label=\"settings\" onClick={handleClick}>\n            <MoreVertIcon />\n          </IconButton>\n        }\n        title={\n          <Box sx={{ textAlign: 'left' }}>\n            <Chip\n              label={props.vendorData.isActive ? 'Active' : 'Inactive'}\n              color={props.vendorData.isActive ? 'success' : 'error'}\n              variant=\"outlined\"\n              size=\"small\"\n              sx={{ mb: 1 }}\n            />\n            <Box\n              sx={{\n                display: 'flex',\n                alignItems: 'center',\n                position: 'relative',\n              }}\n            >\n              <Typography variant=\"body1\" gutterBottom>\n                {props.vendorData.name}\n              </Typography>\n            </Box>\n          </Box>\n        }\n        subheader={\n          <Box>\n            <Typography variant=\"body2\" gutterBottom sx={{ textAlign: 'left' }}>\n              {props.vendorData.phone}\n            </Typography>\n            <Typography variant=\"body2\" gutterBottom sx={{ textAlign: 'left' }}>\n              {props.vendorData.email}\n            </Typography>\n          </Box>\n        }\n      />\n      <CardContent sx={{ textAlign: 'left' }}>\n        <Typography sx={{ mt: 1 }} variant=\"caption\" color=\"text.secondary\">\n          Created: {moment(props.vendorData.createdAt).format('DD-MM-YYYY')}\n        </Typography>\n        <Divider sx={{ mb: 2, mt: 1 }} />\n        <Chip label={props.vendorData.vendorType.name} size=\"small\" />\n      </CardContent>\n      <StyledMenu\n        id=\"demo-customized-menu\"\n        MenuListProps={{\n          'aria-labelledby': 'demo-customized-button',\n        }}\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n      >\n        <MenuItem\n          onClick={() => {\n            handleClose();\n            handleEditVendorOpen();\n          }}\n          disableRipple\n        >\n          <EditIcon sx={{ mr: 1.5 }} />\n          Edit\n        </MenuItem>\n        <MenuItem\n          onClick={() => {\n            handleClose();\n            handleRemoveVendorOpen();\n          }}\n          disableRipple\n        >\n          <ToggleOffIcon sx={{ mr: 1.5 }} />\n          Inactive\n        </MenuItem>\n      </StyledMenu>\n      {editVendor.open && (\n        <VendorCreateAndUpdateDialog\n          open={editVendor.open}\n          closeEvent={handleEditVendorClose}\n          methodType={MethodType.UPDATE}\n          populate={props.vendorData}\n        />\n      )}\n      {removeVendor.open && (\n        <ConfirmationDialog\n          open={removeVendor.open}\n          titleButtonDisagree={'Cancel'}\n          titleButtonAgree={'Inactive'}\n          title={'Inactive'}\n          subTitle={'Are you sure you want to inactive this vendor ?'}\n          onClose={handleRemoveVendorClose}\n          loading={removeVendor.loading}\n          onSubmit={handleRemoveVendor}\n        />\n      )}\n    </Card>\n  );\n};\n\nconst MemoizedVendorCard = React.memo(VendorCard, (prevProps, nextProps) => {\n  return JSON.stringify(prevProps) === JSON.stringify(nextProps);\n});\n\nexport default MemoizedVendorCard;\n","import React, { useEffect } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../../../store\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport Stack from \"@mui/material/Stack\";\nimport Box from \"@mui/material/Box\";\nimport LoadingScreen from \"../../../components/LoadingScreen\";\nimport Pagination from \"@mui/material/Pagination\";\nimport PaginationItem from \"@mui/material/PaginationItem\";\nimport NoDataScreen from \"../../../components/NoDataScreen\";\nimport Grid from \"@mui/material/Grid\";\nimport { getVendors } from \"../../../store/slice/page/vendor/action/getVendors\";\nimport VendorCard from \"./VendorCard\";\n\nconst VendorList = () => {\n  const dispatch = useAppDispatch();\n  const { vendor } = useAppSelector((state) => state.pages);\n  const location = useLocation();\n  const query = new URLSearchParams(location.search);\n  const page = parseInt(query.get(\"page\") || \"1\", 10);\n\n  const handleChange = (_event: React.ChangeEvent<unknown>, value: number) => {\n    dispatch(getVendors({ page: value }));\n  };\n\n  useEffect(() => {\n    dispatch(getVendors({ page }));\n  }, [dispatch, page]);\n\n  return (\n    <>\n      {vendor.listLoading ? (\n        <Box sx={defaultBoxStyle}>\n          <LoadingScreen message=\"Loading..\" />\n        </Box>\n      ) : vendor.list.length === 0 ? (\n        <Box sx={defaultBoxStyle}>\n          <NoDataScreen message={\"Vendors Data is Empty\"} />\n        </Box>\n      ) : (\n        <Box sx={{ flexGrow: 1 }}>\n          <Grid\n            container\n            spacing={{ xs: 1, md: 1 }}\n            columns={{ xs: 4, sm: 8, md: 12 }}\n          >\n            {vendor.list.map((vendor, vendorIndex) => {\n              return (\n                <Grid item xs={12} sm={6} md={3} key={vendorIndex}>\n                  <VendorCard key={vendorIndex} vendorData={vendor} />\n                </Grid>\n              );\n            })}\n          </Grid>\n        </Box>\n      )}\n      <Stack spacing={2} sx={{ alignItems: \"center\", mt: 3 }}>\n        <Pagination\n          page={page}\n          count={vendor.totalPage}\n          onChange={handleChange}\n          renderItem={(item) => (\n            <PaginationItem\n              component={Link}\n              to={`/vendor${item.page === 1 ? \"\" : `?page=${item.page}`}`}\n              {...item}\n            />\n          )}\n        />\n      </Stack>\n    </>\n  );\n};\n\nconst defaultBoxStyle = {\n  minHeight: \"530px\",\n  display: \"flex\",\n  justifyContent: \"center\",\n};\n\nconst MemoizedVendorList = React.memo(VendorList, (prevProps, nextProps) => {\n  return JSON.stringify(prevProps) === JSON.stringify(nextProps);\n});\n\nexport default MemoizedVendorList;\n"],"names":["StyledMenu","styled","props","jsxRuntimeExports","jsx","Menu","elevation","anchorOrigin","vertical","horizontal","transformOrigin","borderRadius","marginTop","minWidth","color","boxShadow","padding","fontSize","MemoizedVendorCard","React","memo","query","URLSearchParams","location","search","page","parseInt","get","dispatch","useAppDispatch","anchorEl","setAnchorEl","useState","open","Boolean","handleClose","editVendor","setEditVendor","removeVendor","setRemoveVendor","loading","handleRemoveVendorClose","Card","children","CardHeader","action","IconButton","onClick","event","currentTarget","MoreVertIcon","title","jsxs","Box","sx","textAlign","Chip","label","vendorData","isActive","variant","size","mb","display","alignItems","position","Typography","gutterBottom","name","subheader","phone","email","CardContent","mt","moment","createdAt","format","Divider","vendorType","id","MenuListProps","onClose","MenuItem","disableRipple","EditIcon","mr","ToggleOffIcon","VendorCreateAndUpdateDialog","closeEvent","methodType","MethodType","UPDATE","populate","ConfirmationDialog","titleButtonDisagree","titleButtonAgree","subTitle","onSubmit","param","prev","data","successCB","getVendors","failedCB","async","Promise","resolve","setTimeout","API","method","url","payload","setSnackbar","autoHideDuration","severity","message","error","request","isAxiosError","response","console","log","_a","_b","prevProps","nextProps","JSON","stringify","defaultBoxStyle","minHeight","justifyContent","MemoizedVendorList","vendor","useAppSelector","state","pages","useLocation","useEffect","Fragment","listLoading","LoadingScreen","list","length","NoDataScreen","flexGrow","Grid","container","spacing","xs","md","columns","sm","map","vendorIndex","item","VendorCard","Stack","Pagination","count","totalPage","onChange","_event","value","renderItem","PaginationItem","component","Link","to"],"mappings":"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"}
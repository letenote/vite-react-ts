{"version":3,"mappings":"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","names":["menuDefault","isParent","isChild","name","label","href","UserSlice","createSlice","initialState","authed","email","gender","id","nik","role","departement","permissions","configLoaded","config","menus","reducers","setAuthed","state","action","payload","setConfig","actions","reducer","VendorSlice","listLoading","list","totalPage","setVendorListLoading","loading","setVendorList","vendorReducer","SnackbarSlice","open","autoHideDuration","anchorOrigin","vertical","horizontal","severity","message","setSnackbar","snackbarReducer","setListLoading","setUserList","console","log","pageUserReducer","BudgetSlice","setBudgetListLoading","setBudgetList","budgetReducer","TrainingSlice","detail","data","createdAt","startDate","endDate","objective","duration","createdBy","budget","code","cost","requestBy","trainingType","participants","payments","setTrainingListLoading","setTrainingList","setTrainingDetailLoading","setTrainingDetailData","trainingReducer","PaymentSlice","invoice","notes","isPaid","date","training","vendor","vendorType","setPaymentListLoading","setPaymentList","setPaymentDetailLoading","setPaymentDetail","updatePaymentOnList","getPaymentIndexInlist","findIndex","payment","paymentReducer","SelectInputOptionsSlice","division","level","position","setSelectInputOptionsLading","type","setSelectInputOptions","updateSelectInputOptions","update","map","deleteSelectInputOptions","filter","SelectInputOptionsReducer","AutocompleteOptionsSlice","user","setAutocompleteOptionsLoading","setAutocompleteOptions","option","autocompleteReducer","MonitoringSlice","employee","total","male","value","color","female","spend","suffix","prefix","employeeTrained","trainingHours","totalTrainingPerMonth","setGenderLoading","setGenderData","setSpendLoading","setSpendData","setEmployeeTrainedLoading","setEmployeeTrainedData","setTrainingHoursLoading","setTrainingHoursData","setTotalTrainingPerMonthLoading","setTotalTrainingPerMonthData","store","configureStore","pages","combineReducers","monitoring","components","autocomplete","snackbar","selectInputOptions","settings","userReducer","useAppDispatch","useDispatch","useAppSelector","useSelector","Routes","lazy","import","CircularProgress","Alert","__vitePreload","Snackbar","CheckAuth","App","getToken","localStorage","getItem","dispatch","handleCloseSnackbar","_event","reason","jsxRuntimeExports","jsx","BrowserRouter","children","jsxs","Suspense","fallback","onClose","sx","width","style","marginTop","FwdStyles","brandColor","borderRadius","Theme","createTheme","palette","background","default","grey","primary","main","secondary","mode","MuiCard","styleOverrides","root","MuiButton","contained","sizeLarge","height","MuiTypography","marginBottom","MuiContainer","padding","MuiGrid","MuiDialogActions","MuiFormControl","MuiStepIcon","green","blue","fill","MuiStack","paddingTop","error","warn","debug","ReactDOM","createRoot","document","getElementById","render","Provider","ThemeProvider","theme"],"sources":["../../src/store/slice/settings/user/reducer/user.ts","../../src/store/slice/page/vendor/reducer/index.ts","../../src/store/slice/components/reducer/snackbar.ts","../../src/store/slice/page/user/reducer/index.ts","../../src/store/slice/page/budget/reducer/index.ts","../../src/store/slice/page/training/reducer/index.ts","../../src/store/slice/page/payment/reducer/index.ts","../../src/store/slice/components/reducer/selectInputOptions.ts","../../src/store/slice/components/reducer/autocompleteOptions.ts","../../src/store/slice/page/monitoring/reducer/index.ts","../../src/store/index.ts","../../src/App.tsx","../../src/constant/FwdStyles.tsx","../../src/constant/Theme.tsx","../../src/main.tsx"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n  MenuType,\n  setAuthedPayloadType,\n  userReducerInterface,\n} from '../interface/userReducerInterface.interface';\n\nconst menuDefault: Array<MenuType> = [\n  {\n    isParent: true,\n    isChild: false,\n    name: 'Setting',\n    label: 'Setting',\n    href: '/setting',\n  },\n  {\n    isParent: true,\n    isChild: false,\n    name: 'Logout',\n    label: 'Logout',\n    href: '/login',\n  },\n];\n\nconst initialState: userReducerInterface = {\n  authed: false,\n  name: '',\n  email: '',\n  gender: '',\n  id: '',\n  nik: '',\n  role: '',\n  departement: '',\n  permissions: [],\n  configLoaded: false,\n  config: {\n    menus: [],\n  },\n};\n\nexport const UserSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    setAuthed: (state, action: PayloadAction<setAuthedPayloadType>) => {\n      state.authed = action.payload.authed;\n      state.name = action.payload.name;\n      state.email = action.payload.email;\n      state.gender = action.payload.gender;\n      state.id = action.payload.id;\n      state.nik = action.payload.nik;\n      state.role = action.payload.role;\n      state.permissions = action.payload.permissions;\n      state.departement = action.payload.departement;\n      if (!action.payload.authed) {\n        state.configLoaded = false;\n        state.config.menus = [...menuDefault];\n      }\n    },\n    setConfig: (\n      state,\n      action: PayloadAction<{ configLoaded: boolean; menus: Array<MenuType> }>\n    ) => {\n      state.configLoaded = action.payload.configLoaded;\n      state.config.menus = [...action.payload.menus, ...menuDefault];\n    },\n  },\n});\n\nexport const { setAuthed, setConfig } = UserSlice.actions;\nexport default UserSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n  PageVendorListReducerInterface,\n  PageVendorReducerInterface,\n} from '../interface/PageVendorReducerInterface.interface';\n\nconst initialState: PageVendorReducerInterface = {\n  listLoading: true,\n  list: [],\n  totalPage: 0,\n};\n\nexport const VendorSlice = createSlice({\n  name: 'page-vendor',\n  initialState,\n  reducers: {\n    setVendorListLoading: (\n      state,\n      action: PayloadAction<{ loading: boolean }>\n    ) => {\n      state.listLoading = action.payload.loading;\n    },\n    setVendorList: (\n      state,\n      action: PayloadAction<{\n        list: Array<PageVendorListReducerInterface>;\n        totalPage: number;\n      }>\n    ) => {\n      state.list = action.payload.list;\n      state.totalPage = action.payload.totalPage;\n    },\n  },\n});\n\nexport const { setVendorListLoading, setVendorList } = VendorSlice.actions;\nexport default VendorSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n  setSnackbarPayloadType,\n  snackbarReducerInterface,\n} from '../interface/snackbarReducerInterface.interface';\n\nconst initialState: snackbarReducerInterface = {\n  open: false,\n  autoHideDuration: 3000,\n  anchorOrigin: {\n    vertical: 'top',\n    horizontal: 'right',\n  },\n  severity: 'success',\n  message: 'This is a success message!',\n};\n\nexport const SnackbarSlice = createSlice({\n  name: 'snackbar',\n  initialState,\n  reducers: {\n    setSnackbar: (state, action: PayloadAction<setSnackbarPayloadType>) => {\n      state.open = action.payload.open;\n      state.autoHideDuration = action.payload.autoHideDuration;\n      state.severity = action.payload.severity;\n      state.message = action.payload.message;\n    },\n  },\n});\n\nexport const { setSnackbar } = SnackbarSlice.actions;\nexport default SnackbarSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n  PageUserListReducerInterface,\n  PageUserReducerInterface,\n} from '../interface/PageUserReducerInterface.interface';\n\nconst initialState: PageUserReducerInterface = {\n  listLoading: true,\n  list: [],\n  totalPage: 0,\n};\n\nexport const UserSlice = createSlice({\n  name: 'page-user',\n  initialState,\n  reducers: {\n    setListLoading: (state, action: PayloadAction<{ loading: boolean }>) => {\n      state.listLoading = action.payload.loading;\n    },\n    setUserList: (\n      state,\n      action: PayloadAction<{\n        list: Array<PageUserListReducerInterface>;\n        totalPage: number;\n      }>\n    ) => {\n      console.log('DEBUG:USER', { payload: action.payload });\n      state.list = action.payload.list;\n      state.totalPage = action.payload.totalPage;\n    },\n  },\n});\n\nexport const { setListLoading, setUserList } = UserSlice.actions;\nexport default UserSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n  PageBudgetListReducerInterface,\n  PageBudgetReducerInterface,\n} from '../interface/PageBudgetReducerInterface.interface';\n\nconst initialState: PageBudgetReducerInterface = {\n  listLoading: true,\n  list: [],\n  totalPage: 0,\n};\n\nexport const BudgetSlice = createSlice({\n  name: 'page-budget',\n  initialState,\n  reducers: {\n    setBudgetListLoading: (\n      state,\n      action: PayloadAction<{ loading: boolean }>\n    ) => {\n      state.listLoading = action.payload.loading;\n    },\n    setBudgetList: (\n      state,\n      action: PayloadAction<{\n        list: Array<PageBudgetListReducerInterface>;\n        totalPage: number;\n      }>\n    ) => {\n      state.list = action.payload.list;\n      state.totalPage = action.payload.totalPage;\n    },\n  },\n});\n\nexport const { setBudgetListLoading, setBudgetList } = BudgetSlice.actions;\nexport default BudgetSlice.reducer;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport {\n  PageTrainingListReducerInterface,\n  PageTrainingReducerInterface,\n  TrainingDetailReducerInterface,\n} from \"../interface/PageTrainingReducerInterface.interface\";\n\nconst initialState: PageTrainingReducerInterface = {\n  listLoading: true,\n  list: [],\n  totalPage: 0,\n  detail: {\n    loading: true,\n    data: {\n      id: \"\",\n      name: \"\",\n      createdAt: \"\",\n      startDate: \"\",\n      endDate: \"\",\n      objective: \"\",\n      duration: \"\",\n      createdBy: {\n        id: \"\",\n        name: \"\",\n        departement: {\n          id: \"\",\n          name: \"\",\n        },\n      },\n      budget: {\n        name: \"\",\n        id: \"\",\n        code: \"\",\n        cost: \"\",\n        requestBy: {\n          id: \"\",\n          name: \"\",\n          createdAt: \"\",\n        },\n      },\n      trainingType: {\n        id: \"\",\n        name: \"\",\n      },\n      participants: [],\n      payments: [],\n    },\n  },\n};\n\nexport const TrainingSlice = createSlice({\n  name: \"page-training\",\n  initialState,\n  reducers: {\n    setTrainingListLoading: (\n      state,\n      action: PayloadAction<{ loading: boolean }>\n    ) => {\n      state.listLoading = action.payload.loading;\n    },\n    setTrainingList: (\n      state,\n      action: PayloadAction<{\n        list: Array<PageTrainingListReducerInterface>;\n        totalPage: number;\n      }>\n    ) => {\n      state.list = action.payload.list;\n      state.totalPage = action.payload.totalPage;\n    },\n    setTrainingDetailLoading: (\n      state,\n      action: PayloadAction<{ loading: boolean }>\n    ) => {\n      state.detail.loading = action.payload.loading;\n    },\n    setTrainingDetailData: (\n      state,\n      action: PayloadAction<{\n        data: TrainingDetailReducerInterface | null;\n      }>\n    ) => {\n      state.detail.data =\n        action.payload.data === null\n          ? {\n              id: \"\",\n              name: \"\",\n              createdAt: \"\",\n              startDate: \"\",\n              endDate: \"\",\n              objective: \"\",\n              duration: \"\",\n              createdBy: {\n                id: \"\",\n                name: \"\",\n                departement: {\n                  id: \"\",\n                  name: \"\",\n                },\n              },\n              budget: {\n                name: \"\",\n                id: \"\",\n                code: \"\",\n                cost: \"\",\n                requestBy: {\n                  id: \"\",\n                  name: \"\",\n                  createdAt: \"\",\n                },\n              },\n              trainingType: {\n                id: \"\",\n                name: \"\",\n              },\n              participants: [],\n              payments: [],\n            }\n          : action.payload.data;\n    },\n  },\n});\n\nexport const {\n  setTrainingListLoading,\n  setTrainingList,\n  setTrainingDetailLoading,\n  setTrainingDetailData,\n} = TrainingSlice.actions;\nexport default TrainingSlice.reducer;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport {\n  PagePaymentListReducerInterface,\n  PagePaymentReducerInterface,\n} from \"../interface/PagePaymentReducerInterface.interface\";\n\nconst initialState: PagePaymentReducerInterface = {\n  listLoading: true,\n  list: [],\n  totalPage: 0,\n  detail: {\n    loading: true,\n    data: {\n      id: \"\",\n      cost: \"\",\n      invoice: \"\",\n      notes: \"\",\n      isPaid: false,\n      createdAt: \"\",\n      date: \"\",\n      training: {\n        name: \"\",\n        id: \"\",\n        objective: \"\",\n        duration: \"\",\n        startDate: \"\",\n        endDate: \"\",\n        participants: [],\n        trainingType: {\n          id: \"\",\n          name: \"\",\n        },\n        createdBy: {\n          id: \"\",\n          name: \"\",\n          departement: {\n            id: \"\",\n            name: \"\",\n          },\n        },\n      },\n      budget: {\n        name: \"\",\n        id: \"\",\n        requestBy: {\n          id: \"\",\n          name: \"\",\n          departement: {\n            id: \"\",\n            name: \"\",\n          },\n        },\n      },\n      vendor: {\n        id: \"\",\n        name: \"\",\n        vendorType: {\n          id: \"\",\n          name: \"\",\n        },\n      },\n    },\n  },\n};\n\nexport const PaymentSlice = createSlice({\n  name: \"page-payment\",\n  initialState,\n  reducers: {\n    setPaymentListLoading: (\n      state,\n      action: PayloadAction<{ loading: boolean }>\n    ) => {\n      state.listLoading = action.payload.loading;\n    },\n    setPaymentList: (\n      state,\n      action: PayloadAction<{\n        list: Array<PagePaymentListReducerInterface>;\n        totalPage: number;\n      }>\n    ) => {\n      state.list = action.payload.list;\n      state.totalPage = action.payload.totalPage;\n    },\n    setPaymentDetailLoading: (\n      state,\n      action: PayloadAction<{ loading: boolean }>\n    ) => {\n      state.detail.loading = action.payload.loading;\n    },\n    setPaymentDetail: (\n      state,\n      action: PayloadAction<{\n        data: PagePaymentListReducerInterface;\n      }>\n    ) => {\n      state.detail.data = action.payload.data;\n    },\n    updatePaymentOnList: (\n      state,\n      action: PayloadAction<{\n        id: string;\n        isPaid: boolean;\n        notes: string;\n        date: string;\n      }>\n    ) => {\n      const getPaymentIndexInlist = state.list.findIndex(\n        (payment) => payment.id === action.payload.id\n      );\n      state.detail.data.notes = action.payload.notes;\n      state.detail.data.isPaid = true;\n      state.detail.data.date = action.payload.date;\n      state.list[getPaymentIndexInlist].notes = action.payload.notes;\n      state.list[getPaymentIndexInlist].isPaid = true;\n      state.list[getPaymentIndexInlist].date = action.payload.date;\n    },\n  },\n});\n\nexport const {\n  setPaymentListLoading,\n  setPaymentList,\n  setPaymentDetail,\n  setPaymentDetailLoading,\n  updatePaymentOnList,\n} = PaymentSlice.actions;\nexport default PaymentSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n  selectInputOptionListInterface,\n  selectInputOptionsInterface,\n} from '../interface/selectInputOptionsInterface.interface';\n\nconst initialState: selectInputOptionsInterface = {\n  departement: {\n    loading: true,\n    list: [],\n  },\n  division: {\n    loading: true,\n    list: [],\n  },\n  level: {\n    loading: true,\n    list: [],\n  },\n  position: {\n    loading: true,\n    list: [],\n  },\n  role: {\n    loading: true,\n    list: [],\n  },\n  vendorType: {\n    loading: true,\n    list: [],\n  },\n  trainingType: {\n    loading: true,\n    list: [],\n  },\n};\n\nexport const SelectInputOptionsSlice = createSlice({\n  name: 'select-input-options',\n  initialState,\n  reducers: {\n    setSelectInputOptionsLading: (\n      state,\n      action: PayloadAction<{\n        type: keyof selectInputOptionsInterface;\n        loading: boolean;\n      }>\n    ) => {\n      state[action.payload.type].loading = action.payload.loading;\n    },\n    setSelectInputOptions: (\n      state,\n      action: PayloadAction<{\n        type: keyof selectInputOptionsInterface;\n        list: Array<selectInputOptionListInterface>;\n      }>\n    ) => {\n      state[action.payload.type].list = [\n        ...action.payload.list,\n        ...state[action.payload.type].list,\n      ];\n    },\n    updateSelectInputOptions: (\n      state,\n      action: PayloadAction<{\n        type: keyof selectInputOptionsInterface;\n        id: string;\n        name: string;\n      }>\n    ) => {\n      const update = state[action.payload.type].list.map((list) => {\n        if (list.id === action.payload.id) {\n          list.name = action.payload.name;\n        }\n        return list;\n      });\n\n      state[action.payload.type].list = update;\n    },\n    deleteSelectInputOptions: (\n      state,\n      action: PayloadAction<{\n        type: keyof selectInputOptionsInterface;\n        id: string;\n      }>\n    ) => {\n      state[action.payload.type].list = state[action.payload.type].list.filter(\n        (list: selectInputOptionListInterface) => list.id !== action.payload.id\n      );\n    },\n  },\n});\n\nexport const {\n  setSelectInputOptionsLading,\n  setSelectInputOptions,\n  deleteSelectInputOptions,\n  updateSelectInputOptions,\n} = SelectInputOptionsSlice.actions;\nexport default SelectInputOptionsSlice.reducer;\n","import { PayloadAction, createSlice } from \"@reduxjs/toolkit\";\nimport {\n  AutocompleteOptionListInterface,\n  AutocompleteOptionsInterface,\n} from \"../interface/AutocompleteOptionsInterface.interface\";\n\nconst initialState: AutocompleteOptionsInterface = {\n  vendor: {\n    loading: true,\n    list: [],\n  },\n  user: {\n    loading: true,\n    list: [],\n  },\n  budget: {\n    loading: true,\n    list: [],\n  },\n};\n\nexport const AutocompleteOptionsSlice = createSlice({\n  name: \"autocomplete-input-options\",\n  initialState,\n  reducers: {\n    setAutocompleteOptionsLoading: (\n      state,\n      action: PayloadAction<{\n        type: keyof AutocompleteOptionsInterface;\n        loading: boolean;\n      }>\n    ) => {\n      state[action.payload.type].loading = action.payload.loading;\n    },\n    setAutocompleteOptions: (\n      state,\n      action: PayloadAction<{\n        type: keyof AutocompleteOptionsInterface;\n        list: Array<AutocompleteOptionListInterface>;\n      }>\n    ) => {\n      state[action.payload.type].list = [\n        ...action.payload.list.map((option) => {\n          return {\n            id: option.id,\n            label:\n              option[action.payload.type !== \"budget\" ? \"name\" : \"code\"] || \"\",\n          };\n        }),\n      ];\n    },\n  },\n});\n\nexport const { setAutocompleteOptionsLoading, setAutocompleteOptions } =\n  AutocompleteOptionsSlice.actions;\nexport default AutocompleteOptionsSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { PageMonitoringReducerInterface } from '../interface/PageMonitoringReducerInterface.interface';\nimport { SetGenderPropsType } from '../action/getGenderMonitoring';\n\nconst initialState: PageMonitoringReducerInterface = {\n  employee: {\n    total: '',\n  },\n  gender: {\n    loading: true,\n    label: 'Gender',\n    data: {\n      male: {\n        id: 0,\n        label: 'Male',\n        value: 0,\n        color: '#183028',\n      },\n      female: {\n        id: 1,\n        label: 'Female',\n        value: 0,\n        color: '#FB8C00',\n      },\n    },\n  },\n  spend: {\n    loading: true,\n    label: 'Total Spend',\n    value: '',\n    suffix: '',\n    prefix: 'Rp',\n  },\n  employeeTrained: {\n    loading: false,\n    label: 'Employee Trained',\n    value: '',\n    suffix: '',\n    prefix: '',\n  },\n  trainingHours: {\n    loading: false,\n    label: 'Training Hours',\n    value: '',\n    suffix: 'Hrs',\n    prefix: '',\n  },\n  totalTrainingPerMonth: {\n    loading: true,\n    label: 'Total Training',\n    value: [],\n  },\n};\n\nexport const MonitoringSlice = createSlice({\n  name: 'page-monitoring',\n  initialState,\n  reducers: {\n    setGenderLoading: (state, action: PayloadAction<{ loading: boolean }>) => {\n      state.gender.loading = action.payload.loading;\n    },\n    setGenderData: (\n      state,\n      action: PayloadAction<{ data: SetGenderPropsType }>\n    ) => {\n      state.gender.data.female.value = action.payload.data.female.value;\n      state.gender.data.male.value = action.payload.data.male.value;\n    },\n    setSpendLoading: (state, action: PayloadAction<{ loading: boolean }>) => {\n      state.spend.loading = action.payload.loading;\n    },\n    setSpendData: (\n      state,\n      action: PayloadAction<{ data: { value: string } }>\n    ) => {\n      state.spend.value = action.payload.data.value;\n    },\n    setEmployeeTrainedLoading: (\n      state,\n      action: PayloadAction<{ loading: boolean }>\n    ) => {\n      state.employeeTrained.loading = action.payload.loading;\n    },\n    setEmployeeTrainedData: (\n      state,\n      action: PayloadAction<{ data: { value: string } }>\n    ) => {\n      state.employeeTrained.value = action.payload.data.value;\n    },\n    setTrainingHoursLoading: (\n      state,\n      action: PayloadAction<{ loading: boolean }>\n    ) => {\n      state.trainingHours.loading = action.payload.loading;\n    },\n    setTrainingHoursData: (\n      state,\n      action: PayloadAction<{ data: { value: string } }>\n    ) => {\n      state.trainingHours.value = action.payload.data.value;\n    },\n    setTotalTrainingPerMonthLoading: (\n      state,\n      action: PayloadAction<{ loading: boolean }>\n    ) => {\n      state.totalTrainingPerMonth.loading = action.payload.loading;\n    },\n    setTotalTrainingPerMonthData: (\n      state,\n      action: PayloadAction<{ data: { value: Array<number> } }>\n    ) => {\n      state.totalTrainingPerMonth.value = action.payload.data.value;\n    },\n  },\n});\n\nexport const {\n  setGenderLoading,\n  setGenderData,\n  setSpendLoading,\n  setSpendData,\n  setEmployeeTrainedLoading,\n  setEmployeeTrainedData,\n  setTrainingHoursLoading,\n  setTrainingHoursData,\n  setTotalTrainingPerMonthLoading,\n  setTotalTrainingPerMonthData,\n} = MonitoringSlice.actions;\nexport default MonitoringSlice.reducer;\n","import { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport userReducer from './slice/settings/user/reducer/user';\nimport vendorReducer from './slice/page/vendor/reducer';\nimport snackbarReducer from './slice/components/reducer/snackbar';\nimport pageUserReducer from './slice/page/user/reducer';\nimport budgetReducer from './slice/page/budget/reducer';\nimport trainingReducer from './slice/page/training/reducer';\nimport paymentReducer from './slice/page/payment/reducer';\nimport SelectInputOptionsReducer from './slice/components/reducer/selectInputOptions';\nimport autocompleteReducer from './slice/components/reducer/autocompleteOptions';\nimport monitoringReducer from './slice/page/monitoring/reducer';\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\n\nexport const store = configureStore({\n  reducer: {\n    pages: combineReducers({\n      user: pageUserReducer,\n      vendor: vendorReducer,\n      budget: budgetReducer,\n      training: trainingReducer,\n      payment: paymentReducer,\n      monitoring: monitoringReducer,\n    }),\n    components: combineReducers({\n      autocomplete: autocompleteReducer,\n      snackbar: snackbarReducer,\n      selectInputOptions: SelectInputOptionsReducer,\n    }),\n    settings: combineReducers({\n      user: userReducer,\n    }),\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport const useAppDispatch: () => typeof store.dispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { lazy, Suspense } from \"react\";\nimport { useAppSelector, useAppDispatch } from \"./store\";\nimport { setSnackbar } from \"./store/slice/components/reducer/snackbar\";\nimport { BrowserRouter } from \"react-router-dom\";\nconst Routes = lazy(() => import(\"./routes/index\"));\nconst CircularProgress = lazy(() => import(\"@mui/material/CircularProgress\"));\nconst Alert = lazy(() => import(\"@mui/material/Alert/Alert\"));\nconst Snackbar = lazy(() => import(\"@mui/material/Snackbar\"));\nconst CheckAuth = lazy(() => import(\"./components/CheckAuth\"));\n\nconst App = () => {\n  const getToken = localStorage.getItem(\"_token\");\n  const dispatch = useAppDispatch();\n  const { snackbar } = useAppSelector((state) => state.components);\n  const { user } = useAppSelector((state) => state.settings);\n  const handleCloseSnackbar = (\n    _event: React.SyntheticEvent | Event,\n    reason?: string\n  ) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    dispatch(\n      setSnackbar({\n        open: false,\n        autoHideDuration: 0,\n        severity: snackbar.severity,\n        message: snackbar.message,\n      })\n    );\n  };\n\n  if (!user.authed && getToken !== null)\n    return (\n      <Suspense\n        fallback={\n          <CircularProgress color={\"primary\"} style={{ marginTop: \"50px\" }} />\n        }\n      >\n        <CheckAuth />\n      </Suspense>\n    );\n\n  return (\n    <BrowserRouter>\n      <Suspense fallback={\"\"}>\n        <Snackbar\n          open={snackbar.open}\n          anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n          autoHideDuration={snackbar.autoHideDuration}\n          onClose={handleCloseSnackbar}\n        >\n          <Alert\n            onClose={handleCloseSnackbar}\n            severity={snackbar.severity}\n            sx={{ width: \"100%\" }}\n          >\n            {snackbar.message}\n          </Alert>\n        </Snackbar>\n        <Routes />\n      </Suspense>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","export const FwdStyles = {\n  brandColor: '#e87822',\n  borderRadius: 1,\n};\n","import grey from \"@mui/material/colors/grey\";\nimport { createTheme } from \"@mui/material/styles\";\nimport { FwdStyles } from \"./FwdStyles\";\nimport { blue, green } from \"@mui/material/colors\";\n\nexport const Theme = createTheme({\n  palette: {\n    background: {\n      default: grey[100],\n    },\n    // background-image: linear-gradient(43deg, #f5f5f5 0%, #f5f5f5 80%, #FFCC70 100%);\n    primary: {\n      main: FwdStyles.brandColor,\n    },\n    secondary: {\n      main: grey[600],\n    },\n    mode: \"light\",\n  },\n  components: {\n    MuiCard: {\n      styleOverrides: {\n        root: {\n          borderRadius: FwdStyles.borderRadius + 4,\n        },\n      },\n    },\n    MuiButton: {\n      styleOverrides: {\n        contained: {\n          color: \"white\",\n        },\n        sizeLarge: {\n          height: 55,\n        },\n      },\n    },\n    MuiTypography: {\n      styleOverrides: {\n        root: {\n          marginBottom: 0,\n        },\n      },\n    },\n    MuiContainer: {\n      styleOverrides: {\n        root: {\n          padding: 0,\n        },\n      },\n    },\n    MuiGrid: {\n      styleOverrides: {\n        root: {\n          \"&.MuiGrid-item\": { padding: 8 },\n        },\n      },\n    },\n    MuiDialogActions: {\n      styleOverrides: {\n        root: {\n          padding: \"16px\",\n        },\n      },\n    },\n    MuiFormControl: {\n      styleOverrides: {\n        root: {\n          // verticalAlign: 'top',\n          // marginTop: 2,\n          // marginBottom: 1,\n        },\n      },\n    },\n    MuiStepIcon: {\n      styleOverrides: {\n        root: {\n          color: \"white\",\n          \"&.Mui-completed\": { color: green[500] },\n          \"&.Mui-active\": {\n            color: blue[500],\n          },\n          \"&.Mui-error\": {\n            color: \"#d32f2f\",\n          },\n          \"&.Mui-active .MuiStepIcon-text\": {\n            fill: \"white\",\n          },\n        },\n      },\n    },\n    MuiStack: {\n      styleOverrides: {\n        root: {\n          marginTop: \"0px\",\n          paddingTop: \"0px\",\n        },\n      },\n    },\n  },\n});\n","import ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n// import { registerSW } from \"virtual:pwa-register\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport { Theme } from \"./constant/Theme\";\n// registerSW({ immediate: true });\n\n// replace console.* for disable log on production\nif (import.meta.env.MODE === \"PROD\") {\n  console.log = () => {};\n  console.error = () => {};\n  console.warn = () => {};\n  console.debug = () => {};\n}\n\nReactDOM.createRoot(document.getElementById(\"root\")!).render(\n  <Provider store={store}>\n    <ThemeProvider theme={Theme}>\n      <App />\n    </ThemeProvider>\n  </Provider>\n);\n"],"file":"js/main-fwd--n1B72RI.js"}
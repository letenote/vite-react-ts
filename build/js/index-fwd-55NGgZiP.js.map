{"version":3,"mappings":"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","names":["FooterVersion","lazy","__vitePreload","import","Grid","SimpleAnalyticCard","PieChartCard","BarChartCard","MemoizedMonitoring","React","memo","dispatch","useAppDispatch","monitoring","useAppSelector","state","pages","useEffect","async","setGenderLoading","loading","response","API","method","url","payload","setGenderData","data","male","value","_d","_c","_b","_a","user","count","female","_h","_g","_f","_e","Promise","resolve","setTimeout","error","request","isAxiosError","console","log","_i","setSnackbar","open","autoHideDuration","severity","message","setSpendLoading","setSpendData","payment","totalSpend","setEmployeeTrainedLoading","setEmployeeTrainedData","employeeTrained","setTrainingHoursLoading","setTrainingHoursData","training","hours","setTotalTrainingPerMonthLoading","year","setTotalTrainingPerMonthData","inYear","jsxRuntimeExports","jsxs","Container","sx","pt","minHeight","display","flexDirection","maxWidth","children","jsx","PageTitle","title","backNavigate","Suspense","fallback","CircularProgress","color","style","marginTop","container","spacing","spend","trainingHours","map","analytic","analyticIndex","item","xs","md","pl","label","suffix","prefix","mt","totalTrainingPerMonth","paddingLeft","gender","id","prevProps","nextProps","JSON","stringify"],"sources":["../../src/store/slice/page/monitoring/action/getGenderMonitoring.ts","../../src/containers/Monitoring/index.tsx","../../src/store/slice/page/monitoring/action/getSpendMonitoring.ts","../../src/store/slice/page/monitoring/action/getEmployeeTrainedMonitoring.ts","../../src/store/slice/page/monitoring/action/getTrainingHoursMonitoring.ts","../../src/store/slice/page/monitoring/action/getTotalTrainingPerMonthMonitoring.ts"],"sourcesContent":["import { Dispatch } from '@reduxjs/toolkit';\nimport API from '../../../../../helper/API';\nimport request from 'axios';\nimport { setSnackbar } from '../../../components/reducer/snackbar';\nimport { ErrorResposeType } from '../../../../../helper/useHttp';\nimport { setGenderData, setGenderLoading } from '../reducer';\n\nexport type SetGenderPropsType = {\n  male: {\n    value: number;\n  };\n  female: {\n    value: number;\n  };\n};\n\nexport const getGenderMonitoring = () => async (dispatch: Dispatch) => {\n  try {\n    dispatch(setGenderLoading({ loading: true }));\n    const response = await API({\n      method: 'get',\n      url: `/v1/monitorings/gender`,\n      payload: {},\n    });\n\n    dispatch(\n      setGenderData({\n        data: {\n          male: {\n            value: response.data?.data?.user?.count?.male ?? 0,\n          },\n          female: {\n            value: response.data?.data?.user?.count?.female ?? 0,\n          },\n        },\n      })\n    );\n    await new Promise((resolve) => setTimeout(resolve, 500));\n    dispatch(setGenderLoading({ loading: false }));\n  } catch (error) {\n    if (request.isAxiosError(error) && error.response) {\n      console.log('errr', (error.response?.data as ErrorResposeType).error);\n      dispatch(\n        setSnackbar({\n          open: true,\n          autoHideDuration: 3000,\n          severity: 'warning',\n          message: error.message,\n        })\n      );\n    }\n  }\n};\n","import Container from '@mui/material/Container';\nimport React, { Suspense, lazy, useEffect } from 'react';\nimport PageTitle from '../../components/PageTitle';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { useAppDispatch, useAppSelector } from '../../store';\nimport { getGenderMonitoring } from '../../store/slice/page/monitoring/action/getGenderMonitoring';\nimport { getSpendMonitoring } from '../../store/slice/page/monitoring/action/getSpendMonitoring';\nimport { getEmployeeTrainedMonitoring } from '../../store/slice/page/monitoring/action/getEmployeeTrainedMonitoring';\nimport { getTrainingHoursMonitoring } from '../../store/slice/page/monitoring/action/getTrainingHoursMonitoring';\nimport { getTotalTrainingPerMonthMonitoring } from '../../store/slice/page/monitoring/action/getTotalTrainingPerMonthMonitoring';\nconst FooterVersion = lazy(\n  () => import('../../components/FooterVersion/Index')\n);\nconst Grid = lazy(() => import('@mui/material/Grid'));\nconst SimpleAnalyticCard = lazy(() => import('./child/SimpleAnalyticCard'));\nconst PieChartCard = lazy(() => import('./child/PieChartCard'));\nconst BarChartCard = lazy(() => import('./child/BarChartCard'));\n\nconst Monitoring = () => {\n  const dispatch = useAppDispatch();\n  const { monitoring } = useAppSelector((state) => state.pages);\n\n  useEffect(() => {\n    dispatch(getGenderMonitoring());\n    dispatch(getSpendMonitoring());\n    dispatch(getEmployeeTrainedMonitoring());\n    dispatch(getTrainingHoursMonitoring());\n    dispatch(getTotalTrainingPerMonthMonitoring());\n  }, [dispatch]);\n\n  return (\n    <Container\n      sx={{\n        pt: 3,\n        minHeight: '90vh',\n        display: 'flex',\n        flexDirection: 'column',\n      }}\n      maxWidth={false}\n    >\n      <PageTitle title={'Monitoring'} backNavigate={'dashboard'} />\n      <Suspense\n        fallback={\n          <CircularProgress color={'primary'} style={{ marginTop: '50px' }} />\n        }\n      >\n        <Grid container spacing={2}>\n          {[\n            ...[monitoring.spend],\n            ...[monitoring.employeeTrained],\n            ...[monitoring.trainingHours],\n          ].map((analytic, analyticIndex) => {\n            return (\n              <Grid item xs={12} md={4} key={analyticIndex} sx={{ pl: 0 }}>\n                <SimpleAnalyticCard\n                  loading={analytic.loading}\n                  label={analytic.label}\n                  value={analytic.value}\n                  suffix={analytic.suffix}\n                  prefix={analytic.prefix}\n                />\n              </Grid>\n            );\n          })}\n        </Grid>\n        <Grid container spacing={2} sx={{ mt: 1 }}>\n          <Grid item xs={12} md={9} sx={{ pl: 0 }}>\n            <BarChartCard\n              loading={monitoring.totalTrainingPerMonth.loading}\n              label={monitoring.totalTrainingPerMonth.label}\n              data={monitoring.totalTrainingPerMonth.value}\n            />\n          </Grid>\n          <Grid\n            item\n            xs={12}\n            md={3}\n            style={{ paddingLeft: '8px', marginTop: '8px' }}\n          >\n            <PieChartCard\n              loading={monitoring.gender.loading}\n              label={monitoring.gender.label}\n              data={[\n                {\n                  id: monitoring.gender.data.female.id,\n                  value: monitoring.gender.data.female.value,\n                  label: monitoring.gender.data.female.label,\n                  color: monitoring.gender.data.female.color,\n                },\n                {\n                  id: monitoring.gender.data.male.id,\n                  value: monitoring.gender.data.male.value,\n                  label: monitoring.gender.data.male.label,\n                  color: monitoring.gender.data.male.color,\n                },\n              ]}\n            />\n          </Grid>\n        </Grid>\n        <FooterVersion />\n      </Suspense>\n    </Container>\n  );\n};\n\nconst MemoizedMonitoring = React.memo(Monitoring, (prevProps, nextProps) => {\n  return JSON.stringify(prevProps) === JSON.stringify(nextProps);\n});\n\nexport default MemoizedMonitoring;\n","import { Dispatch } from '@reduxjs/toolkit';\nimport API from '../../../../../helper/API';\nimport request from 'axios';\nimport { setSnackbar } from '../../../components/reducer/snackbar';\nimport { ErrorResposeType } from '../../../../../helper/useHttp';\nimport { setSpendData, setSpendLoading } from '../reducer';\n\nexport const getSpendMonitoring = () => async (dispatch: Dispatch) => {\n  try {\n    dispatch(setSpendLoading({ loading: true }));\n    const response = await API({\n      method: 'get',\n      url: `/v1/monitorings/total-spend`,\n      payload: {},\n    });\n\n    console.log('response', { response });\n    dispatch(\n      setSpendData({\n        data: {\n          value: response.data?.data?.payment?.totalSpend ?? '0',\n        },\n      })\n    );\n\n    await new Promise((resolve) => setTimeout(resolve, 500));\n    dispatch(setSpendLoading({ loading: false }));\n  } catch (error) {\n    if (request.isAxiosError(error) && error.response) {\n      console.log('errr', (error.response?.data as ErrorResposeType).error);\n      dispatch(\n        setSnackbar({\n          open: true,\n          autoHideDuration: 3000,\n          severity: 'warning',\n          message: error.message,\n        })\n      );\n    }\n  }\n};\n","import { Dispatch } from '@reduxjs/toolkit';\nimport API from '../../../../../helper/API';\nimport request from 'axios';\nimport { setSnackbar } from '../../../components/reducer/snackbar';\nimport { ErrorResposeType } from '../../../../../helper/useHttp';\nimport { setEmployeeTrainedData, setEmployeeTrainedLoading } from '../reducer';\n\nexport const getEmployeeTrainedMonitoring =\n  () => async (dispatch: Dispatch) => {\n    try {\n      dispatch(setEmployeeTrainedLoading({ loading: true }));\n      const response = await API({\n        method: 'get',\n        url: `/v1/monitorings/employee-trained`,\n        payload: {},\n      });\n\n      dispatch(\n        setEmployeeTrainedData({\n          data: {\n            value: response.data?.data?.user?.count?.employeeTrained ?? '0',\n          },\n        })\n      );\n      await new Promise((resolve) => setTimeout(resolve, 500));\n      dispatch(setEmployeeTrainedLoading({ loading: false }));\n    } catch (error) {\n      if (request.isAxiosError(error) && error.response) {\n        console.log('errr', (error.response?.data as ErrorResposeType).error);\n        dispatch(\n          setSnackbar({\n            open: true,\n            autoHideDuration: 3000,\n            severity: 'warning',\n            message: error.message,\n          })\n        );\n      }\n    }\n  };\n","import { Dispatch } from '@reduxjs/toolkit';\nimport API from '../../../../../helper/API';\nimport request from 'axios';\nimport { setSnackbar } from '../../../components/reducer/snackbar';\nimport { ErrorResposeType } from '../../../../../helper/useHttp';\nimport { setTrainingHoursData, setTrainingHoursLoading } from '../reducer';\n\nexport const getTrainingHoursMonitoring = () => async (dispatch: Dispatch) => {\n  try {\n    dispatch(setTrainingHoursLoading({ loading: true }));\n    const response = await API({\n      method: 'get',\n      url: `/v1/monitorings/training-hours`,\n      payload: {},\n    });\n\n    console.log('response:getTrainingHoursMonitoring', { response });\n    dispatch(\n      setTrainingHoursData({\n        data: {\n          value: response.data?.data?.training?.hours ?? 0,\n        },\n      })\n    );\n\n    await new Promise((resolve) => setTimeout(resolve, 500));\n    dispatch(setTrainingHoursLoading({ loading: false }));\n  } catch (error) {\n    if (request.isAxiosError(error) && error.response) {\n      console.log('errr', (error.response?.data as ErrorResposeType).error);\n      dispatch(\n        setSnackbar({\n          open: true,\n          autoHideDuration: 3000,\n          severity: 'warning',\n          message: error.message,\n        })\n      );\n    }\n  }\n};\n","import { Dispatch } from '@reduxjs/toolkit';\nimport API from '../../../../../helper/API';\nimport request from 'axios';\nimport { setSnackbar } from '../../../components/reducer/snackbar';\nimport { ErrorResposeType } from '../../../../../helper/useHttp';\nimport {\n  setTotalTrainingPerMonthData,\n  setTotalTrainingPerMonthLoading,\n} from '../reducer';\n\nexport const getTotalTrainingPerMonthMonitoring =\n  () => async (dispatch: Dispatch) => {\n    try {\n      dispatch(setTotalTrainingPerMonthLoading({ loading: true }));\n      const response = await API({\n        method: 'post',\n        url: `/v1/monitorings/total-training`,\n        payload: {\n          year: '2024',\n        },\n      });\n\n      dispatch(\n        setTotalTrainingPerMonthData({\n          data: {\n            value: response.data?.data?.training?.count?.inYear ?? [\n              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n            ],\n          },\n        })\n      );\n\n      await new Promise((resolve) => setTimeout(resolve, 500));\n      dispatch(setTotalTrainingPerMonthLoading({ loading: false }));\n    } catch (error) {\n      if (request.isAxiosError(error) && error.response) {\n        console.log('errr', (error.response?.data as ErrorResposeType).error);\n        dispatch(\n          setSnackbar({\n            open: true,\n            autoHideDuration: 3000,\n            severity: 'warning',\n            message: error.message,\n          })\n        );\n      }\n    }\n  };\n"],"file":"js/index-fwd-55NGgZiP.js"}
import { ComponentFormType } from '../../../../components/Forms/enum/ComponentFormType.enum';
import { SelectInputDialogType } from '../../../../components/SelectInputDialog/enum/SelectInputDialogType.type';
import { CreateUserFormsType } from '../type/CreateUserFormsType.type';

export const CreateUserFormsSchema: CreateUserFormsType = {
  personalData: {
    name: {
      id: 'name',
      name: 'name',
      fullWidth: true,
      label: 'Name',
      placeholder: 'Name',
      required: true,
      errorMessage: 'name required',
      value: '',
      disabled: false,
      type: 'text',
      componentType: ComponentFormType.INPUT_TEXT,
      autoFocus: true,
      autoComplete: '',
      validate: {
        pattern: {
          value: /^/,
          message: '',
        },
      },
      options: [],
    },
    gender: {
      id: 'gender',
      name: 'gender',
      fullWidth: true,
      label: 'Gender',
      placeholder: 'Gender',
      required: true,
      errorMessage: 'gender required',
      value: '',
      disabled: false,
      type: 'select',
      componentType: ComponentFormType.INPUT_DROPDOWN,
      autoFocus: false,
      autoComplete: '',
      validate: {
        pattern: {
          value: /^/,
          message: '',
        },
      },
      options: [
        { value: 'male', label: 'Male' },
        { value: 'female', label: 'Female' },
      ],
    },
    nik: {
      id: 'nik',
      name: 'nik',
      fullWidth: true,
      label: 'Nik',
      placeholder: 'Nik',
      required: true,
      errorMessage: 'nik required',
      value: '',
      disabled: false,
      type: 'text',
      componentType: ComponentFormType.INPUT_TEXT,
      autoFocus: false,
      autoComplete: '',
      validate: {
        pattern: {
          value: /^/,
          message: '',
        },
      },
      options: [],
    },
    email: {
      id: 'email',
      name: 'email',
      fullWidth: true,
      label: 'Email',
      placeholder: 'email corporate',
      required: true,
      errorMessage: 'email required',
      value: '',
      disabled: false,
      type: 'email',
      componentType: ComponentFormType.INPUT_TEXT,
      autoFocus: false,
      autoComplete: 'new-email',
      validate: {
        pattern: {
          value: /[^\s@]+@[^\s@]+\.[^\s@]+/gi,
          message: 'Invalid email format',
        },
      },
      options: [],
    },
    activated: {
      id: 'activated',
      name: 'activated',
      fullWidth: true,
      label: 'Activated',
      placeholder: 'activated',
      required: true,
      errorMessage: 'activated required',
      value: 'active',
      disabled: false,
      type: 'select',
      componentType: ComponentFormType.INPUT_DROPDOWN,
      autoFocus: false,
      autoComplete: '',
      validate: {
        pattern: {
          value: /^/,
          message: '',
        },
      },
      options: [
        { value: 'active', label: 'Active' },
        { value: 'inactive', label: 'InActive' },
      ],
    },
  },
  detailInformation: {
    role: {
      id: 'role',
      name: 'role',
      fullWidth: true,
      label: 'Role',
      placeholder: 'Role',
      required: true,
      errorMessage: 'role required',
      value: '',
      disabled: false,
      type: 'select',
      componentType: ComponentFormType.INPUT_SELECT_MODAL,
      autoFocus: false,
      autoComplete: '',
      validate: {
        pattern: {
          value: /^/,
          message: '',
        },
      },
      options: [],
      SelectInputDialogType: SelectInputDialogType.ROLE,
    },
    departement: {
      id: 'departement',
      name: 'departement',
      fullWidth: true,
      label: 'Departement',
      placeholder: 'Departement',
      required: true,
      errorMessage: 'departement required',
      value: '',
      disabled: false,
      type: 'select',
      componentType: ComponentFormType.INPUT_SELECT_MODAL,
      autoFocus: false,
      autoComplete: '',
      validate: {
        pattern: {
          value: /^/,
          message: '',
        },
      },
      options: [],
      SelectInputDialogType: SelectInputDialogType.DEPARTEMENT,
    },
    division: {
      id: 'division',
      name: 'division',
      fullWidth: true,
      label: 'Division',
      placeholder: 'Division',
      required: true,
      errorMessage: 'division required',
      value: '',
      disabled: false,
      type: 'select',
      componentType: ComponentFormType.INPUT_SELECT_MODAL,
      autoFocus: false,
      autoComplete: '',
      validate: {
        pattern: {
          value: /^/,
          message: '',
        },
      },
      options: [],
      SelectInputDialogType: SelectInputDialogType.DIVISION,
    },
    position: {
      id: 'position',
      name: 'position',
      fullWidth: true,
      label: 'Position',
      placeholder: 'Position',
      required: true,
      errorMessage: 'position required',
      value: '',
      disabled: false,
      type: 'select',
      componentType: ComponentFormType.INPUT_SELECT_MODAL,
      autoFocus: false,
      autoComplete: '',
      validate: {
        pattern: {
          value: /^/,
          message: '',
        },
      },
      options: [],
      SelectInputDialogType: SelectInputDialogType.POSITION,
    },
    level: {
      id: 'level',
      name: 'level',
      fullWidth: true,
      label: 'Level',
      placeholder: 'Level',
      required: true,
      errorMessage: 'level required',
      value: '',
      disabled: false,
      type: 'select',
      componentType: ComponentFormType.INPUT_SELECT_MODAL,
      autoFocus: false,
      autoComplete: '',
      validate: {
        pattern: {
          value: /^/,
          message: '',
        },
      },
      options: [],
      SelectInputDialogType: SelectInputDialogType.LEVEL,
    },
  },
};
